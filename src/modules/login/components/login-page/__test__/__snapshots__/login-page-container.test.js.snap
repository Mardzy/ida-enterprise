// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The login page container displays the login form if the user is not logged in 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-content: stretch;
  -ms-flex-line-pack: stretch;
  align-content: stretch;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
  height: 100%;
  -webkit-flex-basis: 100%;
  -ms-flex-preferred-size: 100%;
  flex-basis: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-content: stretch;
  -ms-flex-line-pack: stretch;
  align-content: stretch;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.c1 {
  min-height: auto;
  min-width: 21.428571428571427rem;
}

<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <StaticRouter
    basename=""
    context={Object {}}
    location="/"
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Connect(LoginWithRedirect)
        redirectsTo="/already-logged-in"
      >
        <LoginWithRedirect
          dispatch={[Function]}
          isLoggedIn={false}
          redirectsTo="/already-logged-in"
        >
          <LoginPage
            renderForm={[Function]}
          >
            <flex
              center={true}
              column={true}
              full={true}
            >
              <div
                className="c0"
              >
                <Header
                  as="h3"
                >
                  <h3
                    className="ui header"
                  >
                    Welcome to the Partner Dashboard
                  </h3>
                </Header>
                <p>
                  Please log in to continue
                </p>
                <segment__Segment
                  minWidth={300}
                  padded={true}
                >
                  <Component
                    className="c1"
                    minWidth={300}
                    padded={true}
                  >
                    <Segment
                      className="c1"
                      padded={true}
                    >
                      <div
                        className="ui padded segment c1"
                      >
                        <ReduxForm>
                          <Connect(Form(Connect(LoginFormComponent)))
                            destroyOnUnmount={true}
                            enableReinitialize={false}
                            forceUnregisterOnUnmount={false}
                            form="login-form"
                            getFormState={[Function]}
                            keepDirtyOnReinitialize={false}
                            onSubmit={[Function]}
                            persistentSubmitErrors={false}
                            pure={true}
                            shouldAsyncValidate={[Function]}
                            shouldError={[Function]}
                            shouldValidate={[Function]}
                            shouldWarn={[Function]}
                            touchOnBlur={true}
                            touchOnChange={false}
                            updateUnregisteredFields={false}
                          >
                            <Form(Connect(LoginFormComponent))
                              anyTouched={false}
                              array={
                                Object {
                                  "insert": [Function],
                                  "move": [Function],
                                  "pop": [Function],
                                  "push": [Function],
                                  "remove": [Function],
                                  "removeAll": [Function],
                                  "shift": [Function],
                                  "splice": [Function],
                                  "swap": [Function],
                                  "unshift": [Function],
                                }
                              }
                              arrayInsert={[Function]}
                              arrayMove={[Function]}
                              arrayPop={[Function]}
                              arrayPush={[Function]}
                              arrayRemove={[Function]}
                              arrayRemoveAll={[Function]}
                              arrayShift={[Function]}
                              arraySplice={[Function]}
                              arraySwap={[Function]}
                              arrayUnshift={[Function]}
                              asyncValidating={false}
                              autofill={[Function]}
                              blur={[Function]}
                              change={[Function]}
                              clearAsyncError={[Function]}
                              clearFields={[Function]}
                              clearSubmit={[Function]}
                              clearSubmitErrors={[Function]}
                              destroy={[Function]}
                              destroyOnUnmount={true}
                              dirty={false}
                              dispatch={[Function]}
                              enableReinitialize={false}
                              focus={[Function]}
                              forceUnregisterOnUnmount={false}
                              form="login-form"
                              getFormState={[Function]}
                              initialize={[Function]}
                              initialized={false}
                              invalid={false}
                              keepDirtyOnReinitialize={false}
                              onSubmit={[Function]}
                              persistentSubmitErrors={false}
                              pristine={true}
                              pure={true}
                              registerField={[Function]}
                              registeredFields={
                                Immutable.Map {
                                  "username": Immutable.Map {
                                    "name": "username",
                                    "type": "Field",
                                    "count": 1,
                                  },
                                  "password": Immutable.Map {
                                    "name": "password",
                                    "type": "Field",
                                    "count": 1,
                                  },
                                }
                              }
                              reset={[Function]}
                              resetSection={[Function]}
                              setSubmitFailed={[Function]}
                              setSubmitSucceeded={[Function]}
                              shouldAsyncValidate={[Function]}
                              shouldError={[Function]}
                              shouldValidate={[Function]}
                              shouldWarn={[Function]}
                              startAsyncValidation={[Function]}
                              startSubmit={[Function]}
                              stopAsyncValidation={[Function]}
                              stopSubmit={[Function]}
                              submit={[Function]}
                              submitFailed={false}
                              submitSucceeded={false}
                              submitting={false}
                              syncErrors={Object {}}
                              syncWarnings={Object {}}
                              touch={[Function]}
                              touchOnBlur={true}
                              touchOnChange={false}
                              unregisterField={[Function]}
                              untouch={[Function]}
                              updateSyncErrors={[Function]}
                              updateSyncWarnings={[Function]}
                              updateUnregisteredFields={false}
                              valid={true}
                              validExceptSubmit={true}
                              values={Immutable.Map {}}
                            >
                              <Connect(LoginFormComponent)
                                anyTouched={false}
                                array={
                                  Object {
                                    "insert": [Function],
                                    "move": [Function],
                                    "pop": [Function],
                                    "push": [Function],
                                    "remove": [Function],
                                    "removeAll": [Function],
                                    "shift": [Function],
                                    "splice": [Function],
                                    "swap": [Function],
                                    "unshift": [Function],
                                  }
                                }
                                asyncValidate={[Function]}
                                asyncValidating={false}
                                autofill={[Function]}
                                blur={[Function]}
                                change={[Function]}
                                clearAsyncError={[Function]}
                                clearFields={[Function]}
                                clearSubmit={[Function]}
                                clearSubmitErrors={[Function]}
                                destroy={[Function]}
                                dirty={false}
                                dispatch={[Function]}
                                form="login-form"
                                handleSubmit={[Function]}
                                initialize={[Function]}
                                initialized={false}
                                invalid={false}
                                onSubmit={[Function]}
                                pristine={true}
                                pure={true}
                                reset={[Function]}
                                resetSection={[Function]}
                                submit={[Function]}
                                submitFailed={false}
                                submitSucceeded={false}
                                submitting={false}
                                touch={[Function]}
                                untouch={[Function]}
                                valid={true}
                              >
                                <LoginFormComponent
                                  anyTouched={false}
                                  array={
                                    Object {
                                      "insert": [Function],
                                      "move": [Function],
                                      "pop": [Function],
                                      "push": [Function],
                                      "remove": [Function],
                                      "removeAll": [Function],
                                      "shift": [Function],
                                      "splice": [Function],
                                      "swap": [Function],
                                      "unshift": [Function],
                                    }
                                  }
                                  asyncValidate={[Function]}
                                  asyncValidating={false}
                                  autofill={[Function]}
                                  blur={[Function]}
                                  change={[Function]}
                                  clearAsyncError={[Function]}
                                  clearFields={[Function]}
                                  clearSubmit={[Function]}
                                  clearSubmitErrors={[Function]}
                                  destroy={[Function]}
                                  dirty={false}
                                  dispatch={[Function]}
                                  error={null}
                                  form="login-form"
                                  handleSubmit={[Function]}
                                  initialize={[Function]}
                                  initialized={false}
                                  invalid={false}
                                  loading={false}
                                  onSubmit={[Function]}
                                  pristine={true}
                                  pure={true}
                                  reset={[Function]}
                                  resetSection={[Function]}
                                  submit={[Function]}
                                  submitFailed={false}
                                  submitSucceeded={false}
                                  submitting={false}
                                  touch={[Function]}
                                  untouch={[Function]}
                                  valid={true}
                                >
                                  <Form
                                    as="form"
                                    error={false}
                                    onSubmit={[Function]}
                                  >
                                    <form
                                      className="ui form"
                                      onSubmit={[Function]}
                                    >
                                      <InputField
                                        disabled={false}
                                        label="Username"
                                        name="username"
                                        type="text"
                                      >
                                        <Field
                                          component={[Function]}
                                          disabled={false}
                                          label="Username"
                                          name="username"
                                          type="text"
                                        >
                                          <Connect(ConnectedField)
                                            _reduxForm={
                                              Object {
                                                "anyTouched": false,
                                                "array": Object {
                                                  "insert": [Function],
                                                  "move": [Function],
                                                  "pop": [Function],
                                                  "push": [Function],
                                                  "remove": [Function],
                                                  "removeAll": [Function],
                                                  "shift": [Function],
                                                  "splice": [Function],
                                                  "swap": [Function],
                                                  "unshift": [Function],
                                                },
                                                "arrayInsert": [Function],
                                                "arrayMove": [Function],
                                                "arrayPop": [Function],
                                                "arrayPush": [Function],
                                                "arrayRemove": [Function],
                                                "arrayRemoveAll": [Function],
                                                "arrayShift": [Function],
                                                "arraySplice": [Function],
                                                "arraySwap": [Function],
                                                "arrayUnshift": [Function],
                                                "asyncErrors": undefined,
                                                "asyncValidate": [Function],
                                                "asyncValidating": false,
                                                "autofill": [Function],
                                                "blur": [Function],
                                                "change": [Function],
                                                "clearAsyncError": [Function],
                                                "clearFields": [Function],
                                                "clearSubmit": [Function],
                                                "clearSubmitErrors": [Function],
                                                "destroy": [Function],
                                                "destroyOnUnmount": true,
                                                "dirty": false,
                                                "dispatch": [Function],
                                                "enableReinitialize": false,
                                                "error": undefined,
                                                "focus": [Function],
                                                "forceUnregisterOnUnmount": false,
                                                "form": "login-form",
                                                "getFormState": [Function],
                                                "getValues": [Function],
                                                "initialValues": undefined,
                                                "initialize": [Function],
                                                "initialized": false,
                                                "invalid": false,
                                                "keepDirtyOnReinitialize": false,
                                                "onSubmit": [Function],
                                                "persistentSubmitErrors": false,
                                                "pristine": true,
                                                "pure": true,
                                                "register": [Function],
                                                "registerField": [Function],
                                                "registerInnerOnSubmit": [Function],
                                                "registeredFields": undefined,
                                                "reset": [Function],
                                                "resetSection": [Function],
                                                "sectionPrefix": undefined,
                                                "setSubmitFailed": [Function],
                                                "setSubmitSucceeded": [Function],
                                                "shouldAsyncValidate": [Function],
                                                "shouldError": [Function],
                                                "shouldValidate": [Function],
                                                "shouldWarn": [Function],
                                                "startAsyncValidation": [Function],
                                                "startSubmit": [Function],
                                                "stopAsyncValidation": [Function],
                                                "stopSubmit": [Function],
                                                "submit": [Function],
                                                "submitFailed": false,
                                                "submitSucceeded": false,
                                                "submitting": false,
                                                "syncErrors": Object {},
                                                "syncWarnings": Object {},
                                                "touch": [Function],
                                                "touchOnBlur": true,
                                                "touchOnChange": false,
                                                "triggerSubmit": undefined,
                                                "unregister": [Function],
                                                "unregisterField": [Function],
                                                "untouch": [Function],
                                                "updateSyncErrors": [Function],
                                                "updateSyncWarnings": [Function],
                                                "updateUnregisteredFields": false,
                                                "valid": true,
                                                "validExceptSubmit": true,
                                                "values": Immutable.Map {},
                                                "warning": undefined,
                                              }
                                            }
                                            component={[Function]}
                                            disabled={false}
                                            label="Username"
                                            name="username"
                                            normalize={[Function]}
                                            type="text"
                                          >
                                            <ConnectedField
                                              _reduxForm={
                                                Object {
                                                  "anyTouched": false,
                                                  "array": Object {
                                                    "insert": [Function],
                                                    "move": [Function],
                                                    "pop": [Function],
                                                    "push": [Function],
                                                    "remove": [Function],
                                                    "removeAll": [Function],
                                                    "shift": [Function],
                                                    "splice": [Function],
                                                    "swap": [Function],
                                                    "unshift": [Function],
                                                  },
                                                  "arrayInsert": [Function],
                                                  "arrayMove": [Function],
                                                  "arrayPop": [Function],
                                                  "arrayPush": [Function],
                                                  "arrayRemove": [Function],
                                                  "arrayRemoveAll": [Function],
                                                  "arrayShift": [Function],
                                                  "arraySplice": [Function],
                                                  "arraySwap": [Function],
                                                  "arrayUnshift": [Function],
                                                  "asyncErrors": undefined,
                                                  "asyncValidate": [Function],
                                                  "asyncValidating": false,
                                                  "autofill": [Function],
                                                  "blur": [Function],
                                                  "change": [Function],
                                                  "clearAsyncError": [Function],
                                                  "clearFields": [Function],
                                                  "clearSubmit": [Function],
                                                  "clearSubmitErrors": [Function],
                                                  "destroy": [Function],
                                                  "destroyOnUnmount": true,
                                                  "dirty": false,
                                                  "dispatch": [Function],
                                                  "enableReinitialize": false,
                                                  "error": undefined,
                                                  "focus": [Function],
                                                  "forceUnregisterOnUnmount": false,
                                                  "form": "login-form",
                                                  "getFormState": [Function],
                                                  "getValues": [Function],
                                                  "initialValues": undefined,
                                                  "initialize": [Function],
                                                  "initialized": false,
                                                  "invalid": false,
                                                  "keepDirtyOnReinitialize": false,
                                                  "onSubmit": [Function],
                                                  "persistentSubmitErrors": false,
                                                  "pristine": true,
                                                  "pure": true,
                                                  "register": [Function],
                                                  "registerField": [Function],
                                                  "registerInnerOnSubmit": [Function],
                                                  "registeredFields": undefined,
                                                  "reset": [Function],
                                                  "resetSection": [Function],
                                                  "sectionPrefix": undefined,
                                                  "setSubmitFailed": [Function],
                                                  "setSubmitSucceeded": [Function],
                                                  "shouldAsyncValidate": [Function],
                                                  "shouldError": [Function],
                                                  "shouldValidate": [Function],
                                                  "shouldWarn": [Function],
                                                  "startAsyncValidation": [Function],
                                                  "startSubmit": [Function],
                                                  "stopAsyncValidation": [Function],
                                                  "stopSubmit": [Function],
                                                  "submit": [Function],
                                                  "submitFailed": false,
                                                  "submitSucceeded": false,
                                                  "submitting": false,
                                                  "syncErrors": Object {},
                                                  "syncWarnings": Object {},
                                                  "touch": [Function],
                                                  "touchOnBlur": true,
                                                  "touchOnChange": false,
                                                  "triggerSubmit": undefined,
                                                  "unregister": [Function],
                                                  "unregisterField": [Function],
                                                  "untouch": [Function],
                                                  "updateSyncErrors": [Function],
                                                  "updateSyncWarnings": [Function],
                                                  "updateUnregisteredFields": false,
                                                  "valid": true,
                                                  "validExceptSubmit": true,
                                                  "values": Immutable.Map {},
                                                  "warning": undefined,
                                                }
                                              }
                                              asyncValidating={false}
                                              component={[Function]}
                                              dirty={false}
                                              disabled={false}
                                              dispatch={[Function]}
                                              label="Username"
                                              name="username"
                                              normalize={[Function]}
                                              pristine={true}
                                              type="text"
                                            >
                                              <renderField
                                                disabled={false}
                                                input={
                                                  Object {
                                                    "name": "username",
                                                    "onBlur": [Function],
                                                    "onChange": [Function],
                                                    "onDragStart": [Function],
                                                    "onDrop": [Function],
                                                    "onFocus": [Function],
                                                    "value": "",
                                                  }
                                                }
                                                label="Username"
                                                meta={
                                                  Object {
                                                    "active": false,
                                                    "asyncValidating": false,
                                                    "autofilled": false,
                                                    "dirty": false,
                                                    "dispatch": [Function],
                                                    "error": undefined,
                                                    "form": "login-form",
                                                    "initial": undefined,
                                                    "invalid": false,
                                                    "pristine": true,
                                                    "submitFailed": false,
                                                    "submitting": false,
                                                    "touched": false,
                                                    "valid": true,
                                                    "visited": false,
                                                    "warning": undefined,
                                                  }
                                                }
                                                type="text"
                                              >
                                                <FormField
                                                  error={false}
                                                >
                                                  <div
                                                    className="field"
                                                  >
                                                    <label>
                                                      Username
                                                    </label>
                                                    <Input
                                                      disabled={false}
                                                      name="username"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onDragStart={[Function]}
                                                      onDrop={[Function]}
                                                      onFocus={[Function]}
                                                      type="text"
                                                      value=""
                                                    >
                                                      <div
                                                        className="ui input"
                                                      >
                                                        <input
                                                          disabled={false}
                                                          name="username"
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          onDragStart={[Function]}
                                                          onDrop={[Function]}
                                                          onFocus={[Function]}
                                                          type="text"
                                                          value=""
                                                        />
                                                      </div>
                                                    </Input>
                                                  </div>
                                                </FormField>
                                              </renderField>
                                            </ConnectedField>
                                          </Connect(ConnectedField)>
                                        </Field>
                                      </InputField>
                                      <InputField
                                        disabled={false}
                                        label="Password"
                                        name="password"
                                        type="password"
                                      >
                                        <Field
                                          component={[Function]}
                                          disabled={false}
                                          label="Password"
                                          name="password"
                                          type="password"
                                        >
                                          <Connect(ConnectedField)
                                            _reduxForm={
                                              Object {
                                                "anyTouched": false,
                                                "array": Object {
                                                  "insert": [Function],
                                                  "move": [Function],
                                                  "pop": [Function],
                                                  "push": [Function],
                                                  "remove": [Function],
                                                  "removeAll": [Function],
                                                  "shift": [Function],
                                                  "splice": [Function],
                                                  "swap": [Function],
                                                  "unshift": [Function],
                                                },
                                                "arrayInsert": [Function],
                                                "arrayMove": [Function],
                                                "arrayPop": [Function],
                                                "arrayPush": [Function],
                                                "arrayRemove": [Function],
                                                "arrayRemoveAll": [Function],
                                                "arrayShift": [Function],
                                                "arraySplice": [Function],
                                                "arraySwap": [Function],
                                                "arrayUnshift": [Function],
                                                "asyncErrors": undefined,
                                                "asyncValidate": [Function],
                                                "asyncValidating": false,
                                                "autofill": [Function],
                                                "blur": [Function],
                                                "change": [Function],
                                                "clearAsyncError": [Function],
                                                "clearFields": [Function],
                                                "clearSubmit": [Function],
                                                "clearSubmitErrors": [Function],
                                                "destroy": [Function],
                                                "destroyOnUnmount": true,
                                                "dirty": false,
                                                "dispatch": [Function],
                                                "enableReinitialize": false,
                                                "error": undefined,
                                                "focus": [Function],
                                                "forceUnregisterOnUnmount": false,
                                                "form": "login-form",
                                                "getFormState": [Function],
                                                "getValues": [Function],
                                                "initialValues": undefined,
                                                "initialize": [Function],
                                                "initialized": false,
                                                "invalid": false,
                                                "keepDirtyOnReinitialize": false,
                                                "onSubmit": [Function],
                                                "persistentSubmitErrors": false,
                                                "pristine": true,
                                                "pure": true,
                                                "register": [Function],
                                                "registerField": [Function],
                                                "registerInnerOnSubmit": [Function],
                                                "registeredFields": undefined,
                                                "reset": [Function],
                                                "resetSection": [Function],
                                                "sectionPrefix": undefined,
                                                "setSubmitFailed": [Function],
                                                "setSubmitSucceeded": [Function],
                                                "shouldAsyncValidate": [Function],
                                                "shouldError": [Function],
                                                "shouldValidate": [Function],
                                                "shouldWarn": [Function],
                                                "startAsyncValidation": [Function],
                                                "startSubmit": [Function],
                                                "stopAsyncValidation": [Function],
                                                "stopSubmit": [Function],
                                                "submit": [Function],
                                                "submitFailed": false,
                                                "submitSucceeded": false,
                                                "submitting": false,
                                                "syncErrors": Object {},
                                                "syncWarnings": Object {},
                                                "touch": [Function],
                                                "touchOnBlur": true,
                                                "touchOnChange": false,
                                                "triggerSubmit": undefined,
                                                "unregister": [Function],
                                                "unregisterField": [Function],
                                                "untouch": [Function],
                                                "updateSyncErrors": [Function],
                                                "updateSyncWarnings": [Function],
                                                "updateUnregisteredFields": false,
                                                "valid": true,
                                                "validExceptSubmit": true,
                                                "values": Immutable.Map {},
                                                "warning": undefined,
                                              }
                                            }
                                            component={[Function]}
                                            disabled={false}
                                            label="Password"
                                            name="password"
                                            normalize={[Function]}
                                            type="password"
                                          >
                                            <ConnectedField
                                              _reduxForm={
                                                Object {
                                                  "anyTouched": false,
                                                  "array": Object {
                                                    "insert": [Function],
                                                    "move": [Function],
                                                    "pop": [Function],
                                                    "push": [Function],
                                                    "remove": [Function],
                                                    "removeAll": [Function],
                                                    "shift": [Function],
                                                    "splice": [Function],
                                                    "swap": [Function],
                                                    "unshift": [Function],
                                                  },
                                                  "arrayInsert": [Function],
                                                  "arrayMove": [Function],
                                                  "arrayPop": [Function],
                                                  "arrayPush": [Function],
                                                  "arrayRemove": [Function],
                                                  "arrayRemoveAll": [Function],
                                                  "arrayShift": [Function],
                                                  "arraySplice": [Function],
                                                  "arraySwap": [Function],
                                                  "arrayUnshift": [Function],
                                                  "asyncErrors": undefined,
                                                  "asyncValidate": [Function],
                                                  "asyncValidating": false,
                                                  "autofill": [Function],
                                                  "blur": [Function],
                                                  "change": [Function],
                                                  "clearAsyncError": [Function],
                                                  "clearFields": [Function],
                                                  "clearSubmit": [Function],
                                                  "clearSubmitErrors": [Function],
                                                  "destroy": [Function],
                                                  "destroyOnUnmount": true,
                                                  "dirty": false,
                                                  "dispatch": [Function],
                                                  "enableReinitialize": false,
                                                  "error": undefined,
                                                  "focus": [Function],
                                                  "forceUnregisterOnUnmount": false,
                                                  "form": "login-form",
                                                  "getFormState": [Function],
                                                  "getValues": [Function],
                                                  "initialValues": undefined,
                                                  "initialize": [Function],
                                                  "initialized": false,
                                                  "invalid": false,
                                                  "keepDirtyOnReinitialize": false,
                                                  "onSubmit": [Function],
                                                  "persistentSubmitErrors": false,
                                                  "pristine": true,
                                                  "pure": true,
                                                  "register": [Function],
                                                  "registerField": [Function],
                                                  "registerInnerOnSubmit": [Function],
                                                  "registeredFields": undefined,
                                                  "reset": [Function],
                                                  "resetSection": [Function],
                                                  "sectionPrefix": undefined,
                                                  "setSubmitFailed": [Function],
                                                  "setSubmitSucceeded": [Function],
                                                  "shouldAsyncValidate": [Function],
                                                  "shouldError": [Function],
                                                  "shouldValidate": [Function],
                                                  "shouldWarn": [Function],
                                                  "startAsyncValidation": [Function],
                                                  "startSubmit": [Function],
                                                  "stopAsyncValidation": [Function],
                                                  "stopSubmit": [Function],
                                                  "submit": [Function],
                                                  "submitFailed": false,
                                                  "submitSucceeded": false,
                                                  "submitting": false,
                                                  "syncErrors": Object {},
                                                  "syncWarnings": Object {},
                                                  "touch": [Function],
                                                  "touchOnBlur": true,
                                                  "touchOnChange": false,
                                                  "triggerSubmit": undefined,
                                                  "unregister": [Function],
                                                  "unregisterField": [Function],
                                                  "untouch": [Function],
                                                  "updateSyncErrors": [Function],
                                                  "updateSyncWarnings": [Function],
                                                  "updateUnregisteredFields": false,
                                                  "valid": true,
                                                  "validExceptSubmit": true,
                                                  "values": Immutable.Map {},
                                                  "warning": undefined,
                                                }
                                              }
                                              asyncValidating={false}
                                              component={[Function]}
                                              dirty={false}
                                              disabled={false}
                                              dispatch={[Function]}
                                              label="Password"
                                              name="password"
                                              normalize={[Function]}
                                              pristine={true}
                                              type="password"
                                            >
                                              <renderField
                                                disabled={false}
                                                input={
                                                  Object {
                                                    "name": "password",
                                                    "onBlur": [Function],
                                                    "onChange": [Function],
                                                    "onDragStart": [Function],
                                                    "onDrop": [Function],
                                                    "onFocus": [Function],
                                                    "value": "",
                                                  }
                                                }
                                                label="Password"
                                                meta={
                                                  Object {
                                                    "active": false,
                                                    "asyncValidating": false,
                                                    "autofilled": false,
                                                    "dirty": false,
                                                    "dispatch": [Function],
                                                    "error": undefined,
                                                    "form": "login-form",
                                                    "initial": undefined,
                                                    "invalid": false,
                                                    "pristine": true,
                                                    "submitFailed": false,
                                                    "submitting": false,
                                                    "touched": false,
                                                    "valid": true,
                                                    "visited": false,
                                                    "warning": undefined,
                                                  }
                                                }
                                                type="password"
                                              >
                                                <FormField
                                                  error={false}
                                                >
                                                  <div
                                                    className="field"
                                                  >
                                                    <label>
                                                      Password
                                                    </label>
                                                    <Input
                                                      disabled={false}
                                                      name="password"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onDragStart={[Function]}
                                                      onDrop={[Function]}
                                                      onFocus={[Function]}
                                                      type="password"
                                                      value=""
                                                    >
                                                      <div
                                                        className="ui input"
                                                      >
                                                        <input
                                                          disabled={false}
                                                          name="password"
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          onDragStart={[Function]}
                                                          onDrop={[Function]}
                                                          onFocus={[Function]}
                                                          type="password"
                                                          value=""
                                                        />
                                                      </div>
                                                    </Input>
                                                  </div>
                                                </FormField>
                                              </renderField>
                                            </ConnectedField>
                                          </Connect(ConnectedField)>
                                        </Field>
                                      </InputField>
                                      <Message
                                        content={null}
                                        error={true}
                                      >
                                        <div
                                          className="ui error message"
                                        />
                                      </Message>
                                      <flex
                                        justifyEnd={true}
                                      >
                                        <div
                                          className="c2"
                                        >
                                          <Button
                                            as="button"
                                            loading={false}
                                            primary={true}
                                            role="button"
                                            type="submit"
                                          >
                                            <button
                                              className="ui primary button"
                                              onClick={[Function]}
                                              role="button"
                                              type="submit"
                                            >
                                              Log in
                                            </button>
                                          </Button>
                                        </div>
                                      </flex>
                                    </form>
                                  </Form>
                                </LoginFormComponent>
                              </Connect(LoginFormComponent)>
                            </Form(Connect(LoginFormComponent))>
                          </Connect(Form(Connect(LoginFormComponent)))>
                        </ReduxForm>
                      </div>
                    </Segment>
                  </Component>
                </segment__Segment>
              </div>
            </flex>
          </LoginPage>
        </LoginWithRedirect>
      </Connect(LoginWithRedirect)>
    </Router>
  </StaticRouter>
</Provider>
`;

exports[`The login page container redirects to /already-logged-in if the user is already logged in 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <StaticRouter
    basename=""
    context={
      Object {
        "action": "REPLACE",
        "location": Object {
          "hash": "",
          "pathname": "/already-logged-in",
          "search": "",
          "state": undefined,
        },
        "url": "/already-logged-in",
      }
    }
    location="/"
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Connect(LoginWithRedirect)
        redirectsTo="/already-logged-in"
      >
        <LoginWithRedirect
          dispatch={[Function]}
          isLoggedIn={true}
          redirectsTo="/already-logged-in"
        >
          <Redirect
            push={false}
            to="/already-logged-in"
          />
        </LoginWithRedirect>
      </Connect(LoginWithRedirect)>
    </Router>
  </StaticRouter>
</Provider>
`;
