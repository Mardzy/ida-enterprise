// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The graph legend renders a list of legend items 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-content: stretch;
  -ms-flex-line-pack: stretch;
  align-content: stretch;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  width: 100%;
  height: 100%;
  -webkit-flex-basis: 100%;
  -ms-flex-preferred-size: 100%;
  flex-basis: 100%;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-content: stretch;
  -ms-flex-line-pack: stretch;
  align-content: stretch;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 100%;
  height: 100%;
  -webkit-flex-basis: 100%;
  -ms-flex-preferred-size: 100%;
  flex-basis: 100%;
}

.c2 {
  -webkit-order: 0;
  -ms-flex-order: 0;
  order: 0;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 1;
  -ms-flex-negative: 1;
  flex-shrink: 1;
  display: block;
  -webkit-flex-basis: 50%;
  -ms-flex-preferred-size: 50%;
  flex-basis: 50%;
}

.c5 {
  -webkit-order: 0;
  -ms-flex-order: 0;
  order: 0;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 1;
  -ms-flex-negative: 1;
  flex-shrink: 1;
  display: block;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.c4 {
  color: #e53935;
}

.c7 {
  color: #D81B60;
}

.c8 {
  color: #8E24AA;
}

.c9 {
  color: #5E35B1;
}

.c10 {
  color: #3949AB;
}

.c11 {
  color: #1E88E5;
}

.c12 {
  color: #039BE5;
}

.c13 {
  color: #00ACC1;
}

.c15 {
  color: #43A047;
}

.c17 {
  color: #7CB342;
}

.c1 {
  border-width: 0.07142857142857142rem;
  border-style: dashed;
  border-radius: 0rem;
  border-color: #D6D6D6;
  border-left: 0;
  border-top: 0;
  border-right: 0;
  padding: 1rem;
}

.c6 {
  border-width: 0.07142857142857142rem;
  border-style: dashed;
  border-radius: 0rem;
  border-color: #D6D6D6;
  border-top: 0;
  border-right: 0;
  padding: 1rem;
}

.c14 {
  border-width: 0.07142857142857142rem;
  border-style: dashed;
  border-radius: 0rem;
  border-color: #D6D6D6;
  border-left: 0;
  border-bottom: 0;
  border-top: 0;
  border-right: 0;
  padding: 1rem;
}

.c16 {
  border-width: 0.07142857142857142rem;
  border-style: dashed;
  border-radius: 0rem;
  border-color: #D6D6D6;
  border-bottom: 0;
  border-top: 0;
  border-right: 0;
  padding: 1rem;
}

<GraphLegend
  columns={2}
  items={
    Immutable.List [
      Immutable.Map {
        "label": "Lorem ipsum dolor",
      },
      Immutable.Map {
        "label": "Diam sapien",
        "value": "$54,234",
      },
      Immutable.Map {
        "label": "Pellentesque",
      },
      Immutable.Map {
        "label": "Amet diam",
        "value": "Some",
      },
      Immutable.Map {
        "label": "Ulnam vitae",
      },
      Immutable.Map {
        "label": "Ipsum dolor",
      },
      Immutable.Map {
        "label": "Sapien diam",
      },
      Immutable.Map {
        "label": "Pellentesque amet",
      },
      Immutable.Map {
        "label": "Diam dolor sapien",
      },
      Immutable.Map {
        "label": "Vitae ulnam",
      },
    ]
  }
  palette={
    ColorPalette {
      "cache": Object {
        "068bd95f1f2605c97c69f8cadd5cc2e449269535": "#8E24AA",
        "08a0641b040fbf5ace67d6c29d035fc951dbe176": "#039BE5",
        "2e6fe8785ce797e8629cc8dc2ed5e79e72a96781": "#5E35B1",
        "55325ab577b56cc4596966d646892286acfa95e1": "#1E88E5",
        "5a701e07e01def1094f63fd9cdaa63ea6e45bf19": "#e53935",
        "6fb112f98c83b100eae6ff55e0378342f591c0b5": "#00ACC1",
        "a52c2792d30f345492735d42190c246939168a6b": "#D81B60",
        "cc17abe04657c084651640877dcc3b876a6f1756": "#43A047",
        "ce970448c761dd0ec0b0e734b6ab305c796a8268": "#3949AB",
        "e047b4e7fbf5820134d60ea7d0da2e25e0283310": "#7CB342",
      },
      "getRandomColor": [Function],
    }
  }
>
  <flex
    full={true}
    wrap="wrap"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "flex-x9ump0-0",
            "isStatic": false,
            "lastClassName": "c3",
            "rules": Array [
              "display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:flex-start;align-content:stretch;",
              [Function],
              ";",
              [Function],
              ";",
              [Function],
              ";",
              [Function],
              ";",
              [Function],
              ";",
              [Function],
              ";",
              [Function],
              ";",
              [Function],
              ";",
              [Function],
              ";",
              [Function],
              ";",
              [Function],
              ";",
              [Function],
              ";",
              [Function],
              ";",
              [Function],
              ";",
              [Function],
              ";",
              [Function],
              ";",
              [Function],
              ";",
              [Function],
              ";",
              [Function],
              ";",
              [Function],
              ";",
              [Function],
              ";",
              [Function],
              ";",
              [Function],
              ";",
              [Function],
              ";",
              [Function],
              ";",
              [Function],
              ";",
            ],
          },
          "displayName": "flex",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "flex-x9ump0-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      full={true}
      wrap="wrap"
    >
      <div
        className="c0"
        wrap="wrap"
      >
        <Styled(LegendItem)
          basis="50%"
          color="#e53935"
          isFirstInRow={true}
          isInLastRow={false}
          key="Lorem ipsum dolor"
        >
          <StyledComponent
            basis="50%"
            color="#e53935"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": false,
                  "lastClassName": "c16",
                  "rules": Array [
                    "
  ",
                    "
    border-width: 0.07142857142857142rem;
    border-style: dashed;
    border-radius: 0rem;
    border-color: #D6D6D6;
  ",
                    "
  ",
                    [Function],
                    "
  ",
                    [Function],
                    "
  border-top: 0;
  border-right: 0;
  padding: ",
                    "1rem",
                    ";
",
                  ],
                },
                "displayName": "Styled(LegendItem)",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            isFirstInRow={true}
            isInLastRow={false}
          >
            <LegendItem
              basis="50%"
              className="c1"
              color="#e53935"
              isFirstInRow={true}
              isInLastRow={false}
            >
              <item
                basis="50%"
                className="c1"
              >
                <StyledComponent
                  basis="50%"
                  className="c1"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "item-pyuzpd-0",
                        "isStatic": false,
                        "lastClassName": "c5",
                        "rules": Array [
                          "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                        ],
                      },
                      "displayName": "item",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "item-pyuzpd-0",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c1 c2"
                  >
                    <flex
                      alignCenter={true}
                      full={true}
                    >
                      <StyledComponent
                        alignCenter={true}
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "flex-x9ump0-0",
                              "isStatic": false,
                              "lastClassName": "c3",
                              "rules": Array [
                                "display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:flex-start;align-content:stretch;",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                              ],
                            },
                            "displayName": "flex",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "flex-x9ump0-0",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        full={true}
                      >
                        <div
                          className="c3"
                        >
                          <Styled(Component)
                            color="#e53935"
                            name="square"
                          >
                            <StyledComponent
                              color="#e53935"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-bdVaJa",
                                    "isStatic": false,
                                    "lastClassName": "c17",
                                    "rules": Array [
                                      "
  color: ",
                                      [Function],
                                      ";
",
                                    ],
                                  },
                                  "displayName": "Styled(Component)",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-bdVaJa",
                                  "target": [Function],
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              name="square"
                            >
                              <Component
                                className="c4"
                                color="#e53935"
                                name="square"
                              >
                                <Icon
                                  as="i"
                                  className="c4"
                                  name="square"
                                >
                                  <i
                                    aria-hidden="true"
                                    className="square icon c4"
                                    onClick={[Function]}
                                  />
                                </Icon>
                              </Component>
                            </StyledComponent>
                          </Styled(Component)>
                          <item
                            grow={1}
                          >
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "item-pyuzpd-0",
                                    "isStatic": false,
                                    "lastClassName": "c5",
                                    "rules": Array [
                                      "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                    ],
                                  },
                                  "displayName": "item",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "item-pyuzpd-0",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              grow={1}
                            >
                              <div
                                className="c5"
                              >
                                Lorem ipsum dolor
                              </div>
                            </StyledComponent>
                          </item>
                        </div>
                      </StyledComponent>
                    </flex>
                  </div>
                </StyledComponent>
              </item>
            </LegendItem>
          </StyledComponent>
        </Styled(LegendItem)>
        <Styled(LegendItem)
          basis="50%"
          color="#D81B60"
          isFirstInRow={false}
          isInLastRow={false}
          key="Diam sapien"
          value="$54,234"
        >
          <StyledComponent
            basis="50%"
            color="#D81B60"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": false,
                  "lastClassName": "c16",
                  "rules": Array [
                    "
  ",
                    "
    border-width: 0.07142857142857142rem;
    border-style: dashed;
    border-radius: 0rem;
    border-color: #D6D6D6;
  ",
                    "
  ",
                    [Function],
                    "
  ",
                    [Function],
                    "
  border-top: 0;
  border-right: 0;
  padding: ",
                    "1rem",
                    ";
",
                  ],
                },
                "displayName": "Styled(LegendItem)",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            isFirstInRow={false}
            isInLastRow={false}
            value="$54,234"
          >
            <LegendItem
              basis="50%"
              className="c6"
              color="#D81B60"
              isFirstInRow={false}
              isInLastRow={false}
              value="$54,234"
            >
              <item
                basis="50%"
                className="c6"
              >
                <StyledComponent
                  basis="50%"
                  className="c6"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "item-pyuzpd-0",
                        "isStatic": false,
                        "lastClassName": "c5",
                        "rules": Array [
                          "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                        ],
                      },
                      "displayName": "item",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "item-pyuzpd-0",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c6 c2"
                  >
                    <flex
                      alignCenter={true}
                      full={true}
                    >
                      <StyledComponent
                        alignCenter={true}
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "flex-x9ump0-0",
                              "isStatic": false,
                              "lastClassName": "c3",
                              "rules": Array [
                                "display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:flex-start;align-content:stretch;",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                              ],
                            },
                            "displayName": "flex",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "flex-x9ump0-0",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        full={true}
                      >
                        <div
                          className="c3"
                        >
                          <Styled(Component)
                            color="#D81B60"
                            name="square"
                          >
                            <StyledComponent
                              color="#D81B60"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-bdVaJa",
                                    "isStatic": false,
                                    "lastClassName": "c17",
                                    "rules": Array [
                                      "
  color: ",
                                      [Function],
                                      ";
",
                                    ],
                                  },
                                  "displayName": "Styled(Component)",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-bdVaJa",
                                  "target": [Function],
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              name="square"
                            >
                              <Component
                                className="c7"
                                color="#D81B60"
                                name="square"
                              >
                                <Icon
                                  as="i"
                                  className="c7"
                                  name="square"
                                >
                                  <i
                                    aria-hidden="true"
                                    className="square icon c7"
                                    onClick={[Function]}
                                  />
                                </Icon>
                              </Component>
                            </StyledComponent>
                          </Styled(Component)>
                          <item
                            grow={1}
                          >
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "item-pyuzpd-0",
                                    "isStatic": false,
                                    "lastClassName": "c5",
                                    "rules": Array [
                                      "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                    ],
                                  },
                                  "displayName": "item",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "item-pyuzpd-0",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              grow={1}
                            >
                              <div
                                className="c5"
                              >
                                Diam sapien
                              </div>
                            </StyledComponent>
                          </item>
                          <span>
                            $54,234
                          </span>
                        </div>
                      </StyledComponent>
                    </flex>
                  </div>
                </StyledComponent>
              </item>
            </LegendItem>
          </StyledComponent>
        </Styled(LegendItem)>
        <Styled(LegendItem)
          basis="50%"
          color="#8E24AA"
          isFirstInRow={true}
          isInLastRow={false}
          key="Pellentesque"
        >
          <StyledComponent
            basis="50%"
            color="#8E24AA"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": false,
                  "lastClassName": "c16",
                  "rules": Array [
                    "
  ",
                    "
    border-width: 0.07142857142857142rem;
    border-style: dashed;
    border-radius: 0rem;
    border-color: #D6D6D6;
  ",
                    "
  ",
                    [Function],
                    "
  ",
                    [Function],
                    "
  border-top: 0;
  border-right: 0;
  padding: ",
                    "1rem",
                    ";
",
                  ],
                },
                "displayName": "Styled(LegendItem)",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            isFirstInRow={true}
            isInLastRow={false}
          >
            <LegendItem
              basis="50%"
              className="c1"
              color="#8E24AA"
              isFirstInRow={true}
              isInLastRow={false}
            >
              <item
                basis="50%"
                className="c1"
              >
                <StyledComponent
                  basis="50%"
                  className="c1"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "item-pyuzpd-0",
                        "isStatic": false,
                        "lastClassName": "c5",
                        "rules": Array [
                          "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                        ],
                      },
                      "displayName": "item",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "item-pyuzpd-0",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c1 c2"
                  >
                    <flex
                      alignCenter={true}
                      full={true}
                    >
                      <StyledComponent
                        alignCenter={true}
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "flex-x9ump0-0",
                              "isStatic": false,
                              "lastClassName": "c3",
                              "rules": Array [
                                "display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:flex-start;align-content:stretch;",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                              ],
                            },
                            "displayName": "flex",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "flex-x9ump0-0",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        full={true}
                      >
                        <div
                          className="c3"
                        >
                          <Styled(Component)
                            color="#8E24AA"
                            name="square"
                          >
                            <StyledComponent
                              color="#8E24AA"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-bdVaJa",
                                    "isStatic": false,
                                    "lastClassName": "c17",
                                    "rules": Array [
                                      "
  color: ",
                                      [Function],
                                      ";
",
                                    ],
                                  },
                                  "displayName": "Styled(Component)",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-bdVaJa",
                                  "target": [Function],
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              name="square"
                            >
                              <Component
                                className="c8"
                                color="#8E24AA"
                                name="square"
                              >
                                <Icon
                                  as="i"
                                  className="c8"
                                  name="square"
                                >
                                  <i
                                    aria-hidden="true"
                                    className="square icon c8"
                                    onClick={[Function]}
                                  />
                                </Icon>
                              </Component>
                            </StyledComponent>
                          </Styled(Component)>
                          <item
                            grow={1}
                          >
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "item-pyuzpd-0",
                                    "isStatic": false,
                                    "lastClassName": "c5",
                                    "rules": Array [
                                      "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                    ],
                                  },
                                  "displayName": "item",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "item-pyuzpd-0",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              grow={1}
                            >
                              <div
                                className="c5"
                              >
                                Pellentesque
                              </div>
                            </StyledComponent>
                          </item>
                        </div>
                      </StyledComponent>
                    </flex>
                  </div>
                </StyledComponent>
              </item>
            </LegendItem>
          </StyledComponent>
        </Styled(LegendItem)>
        <Styled(LegendItem)
          basis="50%"
          color="#5E35B1"
          isFirstInRow={false}
          isInLastRow={false}
          key="Amet diam"
          value="Some"
        >
          <StyledComponent
            basis="50%"
            color="#5E35B1"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": false,
                  "lastClassName": "c16",
                  "rules": Array [
                    "
  ",
                    "
    border-width: 0.07142857142857142rem;
    border-style: dashed;
    border-radius: 0rem;
    border-color: #D6D6D6;
  ",
                    "
  ",
                    [Function],
                    "
  ",
                    [Function],
                    "
  border-top: 0;
  border-right: 0;
  padding: ",
                    "1rem",
                    ";
",
                  ],
                },
                "displayName": "Styled(LegendItem)",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            isFirstInRow={false}
            isInLastRow={false}
            value="Some"
          >
            <LegendItem
              basis="50%"
              className="c6"
              color="#5E35B1"
              isFirstInRow={false}
              isInLastRow={false}
              value="Some"
            >
              <item
                basis="50%"
                className="c6"
              >
                <StyledComponent
                  basis="50%"
                  className="c6"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "item-pyuzpd-0",
                        "isStatic": false,
                        "lastClassName": "c5",
                        "rules": Array [
                          "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                        ],
                      },
                      "displayName": "item",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "item-pyuzpd-0",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c6 c2"
                  >
                    <flex
                      alignCenter={true}
                      full={true}
                    >
                      <StyledComponent
                        alignCenter={true}
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "flex-x9ump0-0",
                              "isStatic": false,
                              "lastClassName": "c3",
                              "rules": Array [
                                "display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:flex-start;align-content:stretch;",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                              ],
                            },
                            "displayName": "flex",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "flex-x9ump0-0",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        full={true}
                      >
                        <div
                          className="c3"
                        >
                          <Styled(Component)
                            color="#5E35B1"
                            name="square"
                          >
                            <StyledComponent
                              color="#5E35B1"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-bdVaJa",
                                    "isStatic": false,
                                    "lastClassName": "c17",
                                    "rules": Array [
                                      "
  color: ",
                                      [Function],
                                      ";
",
                                    ],
                                  },
                                  "displayName": "Styled(Component)",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-bdVaJa",
                                  "target": [Function],
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              name="square"
                            >
                              <Component
                                className="c9"
                                color="#5E35B1"
                                name="square"
                              >
                                <Icon
                                  as="i"
                                  className="c9"
                                  name="square"
                                >
                                  <i
                                    aria-hidden="true"
                                    className="square icon c9"
                                    onClick={[Function]}
                                  />
                                </Icon>
                              </Component>
                            </StyledComponent>
                          </Styled(Component)>
                          <item
                            grow={1}
                          >
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "item-pyuzpd-0",
                                    "isStatic": false,
                                    "lastClassName": "c5",
                                    "rules": Array [
                                      "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                    ],
                                  },
                                  "displayName": "item",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "item-pyuzpd-0",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              grow={1}
                            >
                              <div
                                className="c5"
                              >
                                Amet diam
                              </div>
                            </StyledComponent>
                          </item>
                          <span>
                            Some
                          </span>
                        </div>
                      </StyledComponent>
                    </flex>
                  </div>
                </StyledComponent>
              </item>
            </LegendItem>
          </StyledComponent>
        </Styled(LegendItem)>
        <Styled(LegendItem)
          basis="50%"
          color="#3949AB"
          isFirstInRow={true}
          isInLastRow={false}
          key="Ulnam vitae"
        >
          <StyledComponent
            basis="50%"
            color="#3949AB"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": false,
                  "lastClassName": "c16",
                  "rules": Array [
                    "
  ",
                    "
    border-width: 0.07142857142857142rem;
    border-style: dashed;
    border-radius: 0rem;
    border-color: #D6D6D6;
  ",
                    "
  ",
                    [Function],
                    "
  ",
                    [Function],
                    "
  border-top: 0;
  border-right: 0;
  padding: ",
                    "1rem",
                    ";
",
                  ],
                },
                "displayName": "Styled(LegendItem)",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            isFirstInRow={true}
            isInLastRow={false}
          >
            <LegendItem
              basis="50%"
              className="c1"
              color="#3949AB"
              isFirstInRow={true}
              isInLastRow={false}
            >
              <item
                basis="50%"
                className="c1"
              >
                <StyledComponent
                  basis="50%"
                  className="c1"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "item-pyuzpd-0",
                        "isStatic": false,
                        "lastClassName": "c5",
                        "rules": Array [
                          "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                        ],
                      },
                      "displayName": "item",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "item-pyuzpd-0",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c1 c2"
                  >
                    <flex
                      alignCenter={true}
                      full={true}
                    >
                      <StyledComponent
                        alignCenter={true}
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "flex-x9ump0-0",
                              "isStatic": false,
                              "lastClassName": "c3",
                              "rules": Array [
                                "display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:flex-start;align-content:stretch;",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                              ],
                            },
                            "displayName": "flex",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "flex-x9ump0-0",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        full={true}
                      >
                        <div
                          className="c3"
                        >
                          <Styled(Component)
                            color="#3949AB"
                            name="square"
                          >
                            <StyledComponent
                              color="#3949AB"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-bdVaJa",
                                    "isStatic": false,
                                    "lastClassName": "c17",
                                    "rules": Array [
                                      "
  color: ",
                                      [Function],
                                      ";
",
                                    ],
                                  },
                                  "displayName": "Styled(Component)",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-bdVaJa",
                                  "target": [Function],
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              name="square"
                            >
                              <Component
                                className="c10"
                                color="#3949AB"
                                name="square"
                              >
                                <Icon
                                  as="i"
                                  className="c10"
                                  name="square"
                                >
                                  <i
                                    aria-hidden="true"
                                    className="square icon c10"
                                    onClick={[Function]}
                                  />
                                </Icon>
                              </Component>
                            </StyledComponent>
                          </Styled(Component)>
                          <item
                            grow={1}
                          >
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "item-pyuzpd-0",
                                    "isStatic": false,
                                    "lastClassName": "c5",
                                    "rules": Array [
                                      "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                    ],
                                  },
                                  "displayName": "item",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "item-pyuzpd-0",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              grow={1}
                            >
                              <div
                                className="c5"
                              >
                                Ulnam vitae
                              </div>
                            </StyledComponent>
                          </item>
                        </div>
                      </StyledComponent>
                    </flex>
                  </div>
                </StyledComponent>
              </item>
            </LegendItem>
          </StyledComponent>
        </Styled(LegendItem)>
        <Styled(LegendItem)
          basis="50%"
          color="#1E88E5"
          isFirstInRow={false}
          isInLastRow={false}
          key="Ipsum dolor"
        >
          <StyledComponent
            basis="50%"
            color="#1E88E5"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": false,
                  "lastClassName": "c16",
                  "rules": Array [
                    "
  ",
                    "
    border-width: 0.07142857142857142rem;
    border-style: dashed;
    border-radius: 0rem;
    border-color: #D6D6D6;
  ",
                    "
  ",
                    [Function],
                    "
  ",
                    [Function],
                    "
  border-top: 0;
  border-right: 0;
  padding: ",
                    "1rem",
                    ";
",
                  ],
                },
                "displayName": "Styled(LegendItem)",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            isFirstInRow={false}
            isInLastRow={false}
          >
            <LegendItem
              basis="50%"
              className="c6"
              color="#1E88E5"
              isFirstInRow={false}
              isInLastRow={false}
            >
              <item
                basis="50%"
                className="c6"
              >
                <StyledComponent
                  basis="50%"
                  className="c6"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "item-pyuzpd-0",
                        "isStatic": false,
                        "lastClassName": "c5",
                        "rules": Array [
                          "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                        ],
                      },
                      "displayName": "item",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "item-pyuzpd-0",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c6 c2"
                  >
                    <flex
                      alignCenter={true}
                      full={true}
                    >
                      <StyledComponent
                        alignCenter={true}
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "flex-x9ump0-0",
                              "isStatic": false,
                              "lastClassName": "c3",
                              "rules": Array [
                                "display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:flex-start;align-content:stretch;",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                              ],
                            },
                            "displayName": "flex",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "flex-x9ump0-0",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        full={true}
                      >
                        <div
                          className="c3"
                        >
                          <Styled(Component)
                            color="#1E88E5"
                            name="square"
                          >
                            <StyledComponent
                              color="#1E88E5"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-bdVaJa",
                                    "isStatic": false,
                                    "lastClassName": "c17",
                                    "rules": Array [
                                      "
  color: ",
                                      [Function],
                                      ";
",
                                    ],
                                  },
                                  "displayName": "Styled(Component)",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-bdVaJa",
                                  "target": [Function],
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              name="square"
                            >
                              <Component
                                className="c11"
                                color="#1E88E5"
                                name="square"
                              >
                                <Icon
                                  as="i"
                                  className="c11"
                                  name="square"
                                >
                                  <i
                                    aria-hidden="true"
                                    className="square icon c11"
                                    onClick={[Function]}
                                  />
                                </Icon>
                              </Component>
                            </StyledComponent>
                          </Styled(Component)>
                          <item
                            grow={1}
                          >
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "item-pyuzpd-0",
                                    "isStatic": false,
                                    "lastClassName": "c5",
                                    "rules": Array [
                                      "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                    ],
                                  },
                                  "displayName": "item",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "item-pyuzpd-0",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              grow={1}
                            >
                              <div
                                className="c5"
                              >
                                Ipsum dolor
                              </div>
                            </StyledComponent>
                          </item>
                        </div>
                      </StyledComponent>
                    </flex>
                  </div>
                </StyledComponent>
              </item>
            </LegendItem>
          </StyledComponent>
        </Styled(LegendItem)>
        <Styled(LegendItem)
          basis="50%"
          color="#039BE5"
          isFirstInRow={true}
          isInLastRow={false}
          key="Sapien diam"
        >
          <StyledComponent
            basis="50%"
            color="#039BE5"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": false,
                  "lastClassName": "c16",
                  "rules": Array [
                    "
  ",
                    "
    border-width: 0.07142857142857142rem;
    border-style: dashed;
    border-radius: 0rem;
    border-color: #D6D6D6;
  ",
                    "
  ",
                    [Function],
                    "
  ",
                    [Function],
                    "
  border-top: 0;
  border-right: 0;
  padding: ",
                    "1rem",
                    ";
",
                  ],
                },
                "displayName": "Styled(LegendItem)",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            isFirstInRow={true}
            isInLastRow={false}
          >
            <LegendItem
              basis="50%"
              className="c1"
              color="#039BE5"
              isFirstInRow={true}
              isInLastRow={false}
            >
              <item
                basis="50%"
                className="c1"
              >
                <StyledComponent
                  basis="50%"
                  className="c1"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "item-pyuzpd-0",
                        "isStatic": false,
                        "lastClassName": "c5",
                        "rules": Array [
                          "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                        ],
                      },
                      "displayName": "item",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "item-pyuzpd-0",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c1 c2"
                  >
                    <flex
                      alignCenter={true}
                      full={true}
                    >
                      <StyledComponent
                        alignCenter={true}
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "flex-x9ump0-0",
                              "isStatic": false,
                              "lastClassName": "c3",
                              "rules": Array [
                                "display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:flex-start;align-content:stretch;",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                              ],
                            },
                            "displayName": "flex",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "flex-x9ump0-0",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        full={true}
                      >
                        <div
                          className="c3"
                        >
                          <Styled(Component)
                            color="#039BE5"
                            name="square"
                          >
                            <StyledComponent
                              color="#039BE5"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-bdVaJa",
                                    "isStatic": false,
                                    "lastClassName": "c17",
                                    "rules": Array [
                                      "
  color: ",
                                      [Function],
                                      ";
",
                                    ],
                                  },
                                  "displayName": "Styled(Component)",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-bdVaJa",
                                  "target": [Function],
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              name="square"
                            >
                              <Component
                                className="c12"
                                color="#039BE5"
                                name="square"
                              >
                                <Icon
                                  as="i"
                                  className="c12"
                                  name="square"
                                >
                                  <i
                                    aria-hidden="true"
                                    className="square icon c12"
                                    onClick={[Function]}
                                  />
                                </Icon>
                              </Component>
                            </StyledComponent>
                          </Styled(Component)>
                          <item
                            grow={1}
                          >
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "item-pyuzpd-0",
                                    "isStatic": false,
                                    "lastClassName": "c5",
                                    "rules": Array [
                                      "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                    ],
                                  },
                                  "displayName": "item",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "item-pyuzpd-0",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              grow={1}
                            >
                              <div
                                className="c5"
                              >
                                Sapien diam
                              </div>
                            </StyledComponent>
                          </item>
                        </div>
                      </StyledComponent>
                    </flex>
                  </div>
                </StyledComponent>
              </item>
            </LegendItem>
          </StyledComponent>
        </Styled(LegendItem)>
        <Styled(LegendItem)
          basis="50%"
          color="#00ACC1"
          isFirstInRow={false}
          isInLastRow={false}
          key="Pellentesque amet"
        >
          <StyledComponent
            basis="50%"
            color="#00ACC1"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": false,
                  "lastClassName": "c16",
                  "rules": Array [
                    "
  ",
                    "
    border-width: 0.07142857142857142rem;
    border-style: dashed;
    border-radius: 0rem;
    border-color: #D6D6D6;
  ",
                    "
  ",
                    [Function],
                    "
  ",
                    [Function],
                    "
  border-top: 0;
  border-right: 0;
  padding: ",
                    "1rem",
                    ";
",
                  ],
                },
                "displayName": "Styled(LegendItem)",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            isFirstInRow={false}
            isInLastRow={false}
          >
            <LegendItem
              basis="50%"
              className="c6"
              color="#00ACC1"
              isFirstInRow={false}
              isInLastRow={false}
            >
              <item
                basis="50%"
                className="c6"
              >
                <StyledComponent
                  basis="50%"
                  className="c6"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "item-pyuzpd-0",
                        "isStatic": false,
                        "lastClassName": "c5",
                        "rules": Array [
                          "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                        ],
                      },
                      "displayName": "item",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "item-pyuzpd-0",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c6 c2"
                  >
                    <flex
                      alignCenter={true}
                      full={true}
                    >
                      <StyledComponent
                        alignCenter={true}
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "flex-x9ump0-0",
                              "isStatic": false,
                              "lastClassName": "c3",
                              "rules": Array [
                                "display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:flex-start;align-content:stretch;",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                              ],
                            },
                            "displayName": "flex",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "flex-x9ump0-0",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        full={true}
                      >
                        <div
                          className="c3"
                        >
                          <Styled(Component)
                            color="#00ACC1"
                            name="square"
                          >
                            <StyledComponent
                              color="#00ACC1"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-bdVaJa",
                                    "isStatic": false,
                                    "lastClassName": "c17",
                                    "rules": Array [
                                      "
  color: ",
                                      [Function],
                                      ";
",
                                    ],
                                  },
                                  "displayName": "Styled(Component)",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-bdVaJa",
                                  "target": [Function],
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              name="square"
                            >
                              <Component
                                className="c13"
                                color="#00ACC1"
                                name="square"
                              >
                                <Icon
                                  as="i"
                                  className="c13"
                                  name="square"
                                >
                                  <i
                                    aria-hidden="true"
                                    className="square icon c13"
                                    onClick={[Function]}
                                  />
                                </Icon>
                              </Component>
                            </StyledComponent>
                          </Styled(Component)>
                          <item
                            grow={1}
                          >
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "item-pyuzpd-0",
                                    "isStatic": false,
                                    "lastClassName": "c5",
                                    "rules": Array [
                                      "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                    ],
                                  },
                                  "displayName": "item",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "item-pyuzpd-0",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              grow={1}
                            >
                              <div
                                className="c5"
                              >
                                Pellentesque amet
                              </div>
                            </StyledComponent>
                          </item>
                        </div>
                      </StyledComponent>
                    </flex>
                  </div>
                </StyledComponent>
              </item>
            </LegendItem>
          </StyledComponent>
        </Styled(LegendItem)>
        <Styled(LegendItem)
          basis="50%"
          color="#43A047"
          isFirstInRow={true}
          isInLastRow={true}
          key="Diam dolor sapien"
        >
          <StyledComponent
            basis="50%"
            color="#43A047"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": false,
                  "lastClassName": "c16",
                  "rules": Array [
                    "
  ",
                    "
    border-width: 0.07142857142857142rem;
    border-style: dashed;
    border-radius: 0rem;
    border-color: #D6D6D6;
  ",
                    "
  ",
                    [Function],
                    "
  ",
                    [Function],
                    "
  border-top: 0;
  border-right: 0;
  padding: ",
                    "1rem",
                    ";
",
                  ],
                },
                "displayName": "Styled(LegendItem)",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            isFirstInRow={true}
            isInLastRow={true}
          >
            <LegendItem
              basis="50%"
              className="c14"
              color="#43A047"
              isFirstInRow={true}
              isInLastRow={true}
            >
              <item
                basis="50%"
                className="c14"
              >
                <StyledComponent
                  basis="50%"
                  className="c14"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "item-pyuzpd-0",
                        "isStatic": false,
                        "lastClassName": "c5",
                        "rules": Array [
                          "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                        ],
                      },
                      "displayName": "item",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "item-pyuzpd-0",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c14 c2"
                  >
                    <flex
                      alignCenter={true}
                      full={true}
                    >
                      <StyledComponent
                        alignCenter={true}
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "flex-x9ump0-0",
                              "isStatic": false,
                              "lastClassName": "c3",
                              "rules": Array [
                                "display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:flex-start;align-content:stretch;",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                              ],
                            },
                            "displayName": "flex",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "flex-x9ump0-0",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        full={true}
                      >
                        <div
                          className="c3"
                        >
                          <Styled(Component)
                            color="#43A047"
                            name="square"
                          >
                            <StyledComponent
                              color="#43A047"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-bdVaJa",
                                    "isStatic": false,
                                    "lastClassName": "c17",
                                    "rules": Array [
                                      "
  color: ",
                                      [Function],
                                      ";
",
                                    ],
                                  },
                                  "displayName": "Styled(Component)",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-bdVaJa",
                                  "target": [Function],
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              name="square"
                            >
                              <Component
                                className="c15"
                                color="#43A047"
                                name="square"
                              >
                                <Icon
                                  as="i"
                                  className="c15"
                                  name="square"
                                >
                                  <i
                                    aria-hidden="true"
                                    className="square icon c15"
                                    onClick={[Function]}
                                  />
                                </Icon>
                              </Component>
                            </StyledComponent>
                          </Styled(Component)>
                          <item
                            grow={1}
                          >
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "item-pyuzpd-0",
                                    "isStatic": false,
                                    "lastClassName": "c5",
                                    "rules": Array [
                                      "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                    ],
                                  },
                                  "displayName": "item",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "item-pyuzpd-0",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              grow={1}
                            >
                              <div
                                className="c5"
                              >
                                Diam dolor sapien
                              </div>
                            </StyledComponent>
                          </item>
                        </div>
                      </StyledComponent>
                    </flex>
                  </div>
                </StyledComponent>
              </item>
            </LegendItem>
          </StyledComponent>
        </Styled(LegendItem)>
        <Styled(LegendItem)
          basis="50%"
          color="#7CB342"
          isFirstInRow={false}
          isInLastRow={true}
          key="Vitae ulnam"
        >
          <StyledComponent
            basis="50%"
            color="#7CB342"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": false,
                  "lastClassName": "c16",
                  "rules": Array [
                    "
  ",
                    "
    border-width: 0.07142857142857142rem;
    border-style: dashed;
    border-radius: 0rem;
    border-color: #D6D6D6;
  ",
                    "
  ",
                    [Function],
                    "
  ",
                    [Function],
                    "
  border-top: 0;
  border-right: 0;
  padding: ",
                    "1rem",
                    ";
",
                  ],
                },
                "displayName": "Styled(LegendItem)",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            isFirstInRow={false}
            isInLastRow={true}
          >
            <LegendItem
              basis="50%"
              className="c16"
              color="#7CB342"
              isFirstInRow={false}
              isInLastRow={true}
            >
              <item
                basis="50%"
                className="c16"
              >
                <StyledComponent
                  basis="50%"
                  className="c16"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "item-pyuzpd-0",
                        "isStatic": false,
                        "lastClassName": "c5",
                        "rules": Array [
                          "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                        ],
                      },
                      "displayName": "item",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "item-pyuzpd-0",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c16 c2"
                  >
                    <flex
                      alignCenter={true}
                      full={true}
                    >
                      <StyledComponent
                        alignCenter={true}
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "flex-x9ump0-0",
                              "isStatic": false,
                              "lastClassName": "c3",
                              "rules": Array [
                                "display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:flex-start;align-content:stretch;",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                              ],
                            },
                            "displayName": "flex",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "flex-x9ump0-0",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        full={true}
                      >
                        <div
                          className="c3"
                        >
                          <Styled(Component)
                            color="#7CB342"
                            name="square"
                          >
                            <StyledComponent
                              color="#7CB342"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-bdVaJa",
                                    "isStatic": false,
                                    "lastClassName": "c17",
                                    "rules": Array [
                                      "
  color: ",
                                      [Function],
                                      ";
",
                                    ],
                                  },
                                  "displayName": "Styled(Component)",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-bdVaJa",
                                  "target": [Function],
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              name="square"
                            >
                              <Component
                                className="c17"
                                color="#7CB342"
                                name="square"
                              >
                                <Icon
                                  as="i"
                                  className="c17"
                                  name="square"
                                >
                                  <i
                                    aria-hidden="true"
                                    className="square icon c17"
                                    onClick={[Function]}
                                  />
                                </Icon>
                              </Component>
                            </StyledComponent>
                          </Styled(Component)>
                          <item
                            grow={1}
                          >
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "item-pyuzpd-0",
                                    "isStatic": false,
                                    "lastClassName": "c5",
                                    "rules": Array [
                                      "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                    ],
                                  },
                                  "displayName": "item",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "item-pyuzpd-0",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              grow={1}
                            >
                              <div
                                className="c5"
                              >
                                Vitae ulnam
                              </div>
                            </StyledComponent>
                          </item>
                        </div>
                      </StyledComponent>
                    </flex>
                  </div>
                </StyledComponent>
              </item>
            </LegendItem>
          </StyledComponent>
        </Styled(LegendItem)>
      </div>
    </StyledComponent>
  </flex>
</GraphLegend>
`;

exports[`The graph legend renders legends with different column count 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-content: stretch;
  -ms-flex-line-pack: stretch;
  align-content: stretch;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  width: 100%;
  height: 100%;
  -webkit-flex-basis: 100%;
  -ms-flex-preferred-size: 100%;
  flex-basis: 100%;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-content: stretch;
  -ms-flex-line-pack: stretch;
  align-content: stretch;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 100%;
  height: 100%;
  -webkit-flex-basis: 100%;
  -ms-flex-preferred-size: 100%;
  flex-basis: 100%;
}

.c5 {
  -webkit-order: 0;
  -ms-flex-order: 0;
  order: 0;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 1;
  -ms-flex-negative: 1;
  flex-shrink: 1;
  display: block;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.c18 {
  -webkit-order: 0;
  -ms-flex-order: 0;
  order: 0;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 1;
  -ms-flex-negative: 1;
  flex-shrink: 1;
  display: block;
  -webkit-flex-basis: 20%;
  -ms-flex-preferred-size: 20%;
  flex-basis: 20%;
}

.c2 {
  -webkit-order: 0;
  -ms-flex-order: 0;
  order: 0;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 1;
  -ms-flex-negative: 1;
  flex-shrink: 1;
  display: block;
  -webkit-flex-basis: 33.333333333333336%;
  -ms-flex-preferred-size: 33.333333333333336%;
  flex-basis: 33.333333333333336%;
}

.c4 {
  color: #e53935;
}

.c7 {
  color: #D81B60;
}

.c8 {
  color: #8E24AA;
}

.c9 {
  color: #5E35B1;
}

.c10 {
  color: #3949AB;
}

.c11 {
  color: #1E88E5;
}

.c12 {
  color: #039BE5;
}

.c13 {
  color: #00ACC1;
}

.c14 {
  color: #43A047;
}

.c16 {
  color: #7CB342;
}

.c1 {
  border-width: 0.07142857142857142rem;
  border-style: dashed;
  border-radius: 0rem;
  border-color: #D6D6D6;
  border-left: 0;
  border-top: 0;
  border-right: 0;
  padding: 1rem;
}

.c6 {
  border-width: 0.07142857142857142rem;
  border-style: dashed;
  border-radius: 0rem;
  border-color: #D6D6D6;
  border-top: 0;
  border-right: 0;
  padding: 1rem;
}

.c15 {
  border-width: 0.07142857142857142rem;
  border-style: dashed;
  border-radius: 0rem;
  border-color: #D6D6D6;
  border-left: 0;
  border-bottom: 0;
  border-top: 0;
  border-right: 0;
  padding: 1rem;
}

.c17 {
  border-width: 0.07142857142857142rem;
  border-style: dashed;
  border-radius: 0rem;
  border-color: #D6D6D6;
  border-bottom: 0;
  border-top: 0;
  border-right: 0;
  padding: 1rem;
}

<div>
  <GraphLegend
    columns={3}
    items={
      Immutable.List [
        Immutable.Map {
          "label": "Lorem ipsum dolor",
        },
        Immutable.Map {
          "label": "Diam sapien",
          "value": "$54,234",
        },
        Immutable.Map {
          "label": "Pellentesque",
        },
        Immutable.Map {
          "label": "Amet diam",
          "value": "Some",
        },
        Immutable.Map {
          "label": "Ulnam vitae",
        },
        Immutable.Map {
          "label": "Ipsum dolor",
        },
        Immutable.Map {
          "label": "Sapien diam",
        },
        Immutable.Map {
          "label": "Pellentesque amet",
        },
        Immutable.Map {
          "label": "Diam dolor sapien",
        },
        Immutable.Map {
          "label": "Vitae ulnam",
        },
      ]
    }
    palette={
      ColorPalette {
        "cache": Object {
          "068bd95f1f2605c97c69f8cadd5cc2e449269535": "#8E24AA",
          "08a0641b040fbf5ace67d6c29d035fc951dbe176": "#039BE5",
          "2e6fe8785ce797e8629cc8dc2ed5e79e72a96781": "#5E35B1",
          "55325ab577b56cc4596966d646892286acfa95e1": "#1E88E5",
          "5a701e07e01def1094f63fd9cdaa63ea6e45bf19": "#e53935",
          "6fb112f98c83b100eae6ff55e0378342f591c0b5": "#00ACC1",
          "a52c2792d30f345492735d42190c246939168a6b": "#D81B60",
          "cc17abe04657c084651640877dcc3b876a6f1756": "#43A047",
          "ce970448c761dd0ec0b0e734b6ab305c796a8268": "#3949AB",
          "e047b4e7fbf5820134d60ea7d0da2e25e0283310": "#7CB342",
        },
        "getRandomColor": [Function],
      }
    }
  >
    <flex
      full={true}
      wrap="wrap"
    >
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "flex-x9ump0-0",
              "isStatic": false,
              "lastClassName": "c3",
              "rules": Array [
                "display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:flex-start;align-content:stretch;",
                [Function],
                ";",
                [Function],
                ";",
                [Function],
                ";",
                [Function],
                ";",
                [Function],
                ";",
                [Function],
                ";",
                [Function],
                ";",
                [Function],
                ";",
                [Function],
                ";",
                [Function],
                ";",
                [Function],
                ";",
                [Function],
                ";",
                [Function],
                ";",
                [Function],
                ";",
                [Function],
                ";",
                [Function],
                ";",
                [Function],
                ";",
                [Function],
                ";",
                [Function],
                ";",
                [Function],
                ";",
                [Function],
                ";",
                [Function],
                ";",
                [Function],
                ";",
                [Function],
                ";",
                [Function],
                ";",
                [Function],
                ";",
              ],
            },
            "displayName": "flex",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "flex-x9ump0-0",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        full={true}
        wrap="wrap"
      >
        <div
          className="c0"
          wrap="wrap"
        >
          <Styled(LegendItem)
            basis="33.333333333333336%"
            color="#e53935"
            isFirstInRow={true}
            isInLastRow={false}
            key="Lorem ipsum dolor"
          >
            <StyledComponent
              basis="33.333333333333336%"
              color="#e53935"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bwzfXH",
                    "isStatic": false,
                    "lastClassName": "c17",
                    "rules": Array [
                      "
  ",
                      "
    border-width: 0.07142857142857142rem;
    border-style: dashed;
    border-radius: 0rem;
    border-color: #D6D6D6;
  ",
                      "
  ",
                      [Function],
                      "
  ",
                      [Function],
                      "
  border-top: 0;
  border-right: 0;
  padding: ",
                      "1rem",
                      ";
",
                    ],
                  },
                  "displayName": "Styled(LegendItem)",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bwzfXH",
                  "target": [Function],
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              isFirstInRow={true}
              isInLastRow={false}
            >
              <LegendItem
                basis="33.333333333333336%"
                className="c1"
                color="#e53935"
                isFirstInRow={true}
                isInLastRow={false}
              >
                <item
                  basis="33.333333333333336%"
                  className="c1"
                >
                  <StyledComponent
                    basis="33.333333333333336%"
                    className="c1"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "item-pyuzpd-0",
                          "isStatic": false,
                          "lastClassName": "c5",
                          "rules": Array [
                            "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                          ],
                        },
                        "displayName": "item",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "item-pyuzpd-0",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c1 c2"
                    >
                      <flex
                        alignCenter={true}
                        full={true}
                      >
                        <StyledComponent
                          alignCenter={true}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "flex-x9ump0-0",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:flex-start;align-content:stretch;",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                ],
                              },
                              "displayName": "flex",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "flex-x9ump0-0",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          full={true}
                        >
                          <div
                            className="c3"
                          >
                            <Styled(Component)
                              color="#e53935"
                              name="square"
                            >
                              <StyledComponent
                                color="#e53935"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-bdVaJa",
                                      "isStatic": false,
                                      "lastClassName": "c16",
                                      "rules": Array [
                                        "
  color: ",
                                        [Function],
                                        ";
",
                                      ],
                                    },
                                    "displayName": "Styled(Component)",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-bdVaJa",
                                    "target": [Function],
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                name="square"
                              >
                                <Component
                                  className="c4"
                                  color="#e53935"
                                  name="square"
                                >
                                  <Icon
                                    as="i"
                                    className="c4"
                                    name="square"
                                  >
                                    <i
                                      aria-hidden="true"
                                      className="square icon c4"
                                      onClick={[Function]}
                                    />
                                  </Icon>
                                </Component>
                              </StyledComponent>
                            </Styled(Component)>
                            <item
                              grow={1}
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "item-pyuzpd-0",
                                      "isStatic": false,
                                      "lastClassName": "c5",
                                      "rules": Array [
                                        "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                      ],
                                    },
                                    "displayName": "item",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "item-pyuzpd-0",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                grow={1}
                              >
                                <div
                                  className="c5"
                                >
                                  Lorem ipsum dolor
                                </div>
                              </StyledComponent>
                            </item>
                          </div>
                        </StyledComponent>
                      </flex>
                    </div>
                  </StyledComponent>
                </item>
              </LegendItem>
            </StyledComponent>
          </Styled(LegendItem)>
          <Styled(LegendItem)
            basis="33.333333333333336%"
            color="#D81B60"
            isFirstInRow={false}
            isInLastRow={false}
            key="Diam sapien"
            value="$54,234"
          >
            <StyledComponent
              basis="33.333333333333336%"
              color="#D81B60"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bwzfXH",
                    "isStatic": false,
                    "lastClassName": "c17",
                    "rules": Array [
                      "
  ",
                      "
    border-width: 0.07142857142857142rem;
    border-style: dashed;
    border-radius: 0rem;
    border-color: #D6D6D6;
  ",
                      "
  ",
                      [Function],
                      "
  ",
                      [Function],
                      "
  border-top: 0;
  border-right: 0;
  padding: ",
                      "1rem",
                      ";
",
                    ],
                  },
                  "displayName": "Styled(LegendItem)",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bwzfXH",
                  "target": [Function],
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              isFirstInRow={false}
              isInLastRow={false}
              value="$54,234"
            >
              <LegendItem
                basis="33.333333333333336%"
                className="c6"
                color="#D81B60"
                isFirstInRow={false}
                isInLastRow={false}
                value="$54,234"
              >
                <item
                  basis="33.333333333333336%"
                  className="c6"
                >
                  <StyledComponent
                    basis="33.333333333333336%"
                    className="c6"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "item-pyuzpd-0",
                          "isStatic": false,
                          "lastClassName": "c5",
                          "rules": Array [
                            "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                          ],
                        },
                        "displayName": "item",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "item-pyuzpd-0",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c6 c2"
                    >
                      <flex
                        alignCenter={true}
                        full={true}
                      >
                        <StyledComponent
                          alignCenter={true}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "flex-x9ump0-0",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:flex-start;align-content:stretch;",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                ],
                              },
                              "displayName": "flex",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "flex-x9ump0-0",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          full={true}
                        >
                          <div
                            className="c3"
                          >
                            <Styled(Component)
                              color="#D81B60"
                              name="square"
                            >
                              <StyledComponent
                                color="#D81B60"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-bdVaJa",
                                      "isStatic": false,
                                      "lastClassName": "c16",
                                      "rules": Array [
                                        "
  color: ",
                                        [Function],
                                        ";
",
                                      ],
                                    },
                                    "displayName": "Styled(Component)",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-bdVaJa",
                                    "target": [Function],
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                name="square"
                              >
                                <Component
                                  className="c7"
                                  color="#D81B60"
                                  name="square"
                                >
                                  <Icon
                                    as="i"
                                    className="c7"
                                    name="square"
                                  >
                                    <i
                                      aria-hidden="true"
                                      className="square icon c7"
                                      onClick={[Function]}
                                    />
                                  </Icon>
                                </Component>
                              </StyledComponent>
                            </Styled(Component)>
                            <item
                              grow={1}
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "item-pyuzpd-0",
                                      "isStatic": false,
                                      "lastClassName": "c5",
                                      "rules": Array [
                                        "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                      ],
                                    },
                                    "displayName": "item",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "item-pyuzpd-0",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                grow={1}
                              >
                                <div
                                  className="c5"
                                >
                                  Diam sapien
                                </div>
                              </StyledComponent>
                            </item>
                            <span>
                              $54,234
                            </span>
                          </div>
                        </StyledComponent>
                      </flex>
                    </div>
                  </StyledComponent>
                </item>
              </LegendItem>
            </StyledComponent>
          </Styled(LegendItem)>
          <Styled(LegendItem)
            basis="33.333333333333336%"
            color="#8E24AA"
            isFirstInRow={false}
            isInLastRow={false}
            key="Pellentesque"
          >
            <StyledComponent
              basis="33.333333333333336%"
              color="#8E24AA"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bwzfXH",
                    "isStatic": false,
                    "lastClassName": "c17",
                    "rules": Array [
                      "
  ",
                      "
    border-width: 0.07142857142857142rem;
    border-style: dashed;
    border-radius: 0rem;
    border-color: #D6D6D6;
  ",
                      "
  ",
                      [Function],
                      "
  ",
                      [Function],
                      "
  border-top: 0;
  border-right: 0;
  padding: ",
                      "1rem",
                      ";
",
                    ],
                  },
                  "displayName": "Styled(LegendItem)",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bwzfXH",
                  "target": [Function],
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              isFirstInRow={false}
              isInLastRow={false}
            >
              <LegendItem
                basis="33.333333333333336%"
                className="c6"
                color="#8E24AA"
                isFirstInRow={false}
                isInLastRow={false}
              >
                <item
                  basis="33.333333333333336%"
                  className="c6"
                >
                  <StyledComponent
                    basis="33.333333333333336%"
                    className="c6"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "item-pyuzpd-0",
                          "isStatic": false,
                          "lastClassName": "c5",
                          "rules": Array [
                            "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                          ],
                        },
                        "displayName": "item",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "item-pyuzpd-0",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c6 c2"
                    >
                      <flex
                        alignCenter={true}
                        full={true}
                      >
                        <StyledComponent
                          alignCenter={true}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "flex-x9ump0-0",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:flex-start;align-content:stretch;",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                ],
                              },
                              "displayName": "flex",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "flex-x9ump0-0",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          full={true}
                        >
                          <div
                            className="c3"
                          >
                            <Styled(Component)
                              color="#8E24AA"
                              name="square"
                            >
                              <StyledComponent
                                color="#8E24AA"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-bdVaJa",
                                      "isStatic": false,
                                      "lastClassName": "c16",
                                      "rules": Array [
                                        "
  color: ",
                                        [Function],
                                        ";
",
                                      ],
                                    },
                                    "displayName": "Styled(Component)",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-bdVaJa",
                                    "target": [Function],
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                name="square"
                              >
                                <Component
                                  className="c8"
                                  color="#8E24AA"
                                  name="square"
                                >
                                  <Icon
                                    as="i"
                                    className="c8"
                                    name="square"
                                  >
                                    <i
                                      aria-hidden="true"
                                      className="square icon c8"
                                      onClick={[Function]}
                                    />
                                  </Icon>
                                </Component>
                              </StyledComponent>
                            </Styled(Component)>
                            <item
                              grow={1}
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "item-pyuzpd-0",
                                      "isStatic": false,
                                      "lastClassName": "c5",
                                      "rules": Array [
                                        "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                      ],
                                    },
                                    "displayName": "item",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "item-pyuzpd-0",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                grow={1}
                              >
                                <div
                                  className="c5"
                                >
                                  Pellentesque
                                </div>
                              </StyledComponent>
                            </item>
                          </div>
                        </StyledComponent>
                      </flex>
                    </div>
                  </StyledComponent>
                </item>
              </LegendItem>
            </StyledComponent>
          </Styled(LegendItem)>
          <Styled(LegendItem)
            basis="33.333333333333336%"
            color="#5E35B1"
            isFirstInRow={true}
            isInLastRow={false}
            key="Amet diam"
            value="Some"
          >
            <StyledComponent
              basis="33.333333333333336%"
              color="#5E35B1"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bwzfXH",
                    "isStatic": false,
                    "lastClassName": "c17",
                    "rules": Array [
                      "
  ",
                      "
    border-width: 0.07142857142857142rem;
    border-style: dashed;
    border-radius: 0rem;
    border-color: #D6D6D6;
  ",
                      "
  ",
                      [Function],
                      "
  ",
                      [Function],
                      "
  border-top: 0;
  border-right: 0;
  padding: ",
                      "1rem",
                      ";
",
                    ],
                  },
                  "displayName": "Styled(LegendItem)",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bwzfXH",
                  "target": [Function],
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              isFirstInRow={true}
              isInLastRow={false}
              value="Some"
            >
              <LegendItem
                basis="33.333333333333336%"
                className="c1"
                color="#5E35B1"
                isFirstInRow={true}
                isInLastRow={false}
                value="Some"
              >
                <item
                  basis="33.333333333333336%"
                  className="c1"
                >
                  <StyledComponent
                    basis="33.333333333333336%"
                    className="c1"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "item-pyuzpd-0",
                          "isStatic": false,
                          "lastClassName": "c5",
                          "rules": Array [
                            "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                          ],
                        },
                        "displayName": "item",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "item-pyuzpd-0",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c1 c2"
                    >
                      <flex
                        alignCenter={true}
                        full={true}
                      >
                        <StyledComponent
                          alignCenter={true}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "flex-x9ump0-0",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:flex-start;align-content:stretch;",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                ],
                              },
                              "displayName": "flex",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "flex-x9ump0-0",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          full={true}
                        >
                          <div
                            className="c3"
                          >
                            <Styled(Component)
                              color="#5E35B1"
                              name="square"
                            >
                              <StyledComponent
                                color="#5E35B1"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-bdVaJa",
                                      "isStatic": false,
                                      "lastClassName": "c16",
                                      "rules": Array [
                                        "
  color: ",
                                        [Function],
                                        ";
",
                                      ],
                                    },
                                    "displayName": "Styled(Component)",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-bdVaJa",
                                    "target": [Function],
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                name="square"
                              >
                                <Component
                                  className="c9"
                                  color="#5E35B1"
                                  name="square"
                                >
                                  <Icon
                                    as="i"
                                    className="c9"
                                    name="square"
                                  >
                                    <i
                                      aria-hidden="true"
                                      className="square icon c9"
                                      onClick={[Function]}
                                    />
                                  </Icon>
                                </Component>
                              </StyledComponent>
                            </Styled(Component)>
                            <item
                              grow={1}
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "item-pyuzpd-0",
                                      "isStatic": false,
                                      "lastClassName": "c5",
                                      "rules": Array [
                                        "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                      ],
                                    },
                                    "displayName": "item",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "item-pyuzpd-0",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                grow={1}
                              >
                                <div
                                  className="c5"
                                >
                                  Amet diam
                                </div>
                              </StyledComponent>
                            </item>
                            <span>
                              Some
                            </span>
                          </div>
                        </StyledComponent>
                      </flex>
                    </div>
                  </StyledComponent>
                </item>
              </LegendItem>
            </StyledComponent>
          </Styled(LegendItem)>
          <Styled(LegendItem)
            basis="33.333333333333336%"
            color="#3949AB"
            isFirstInRow={false}
            isInLastRow={false}
            key="Ulnam vitae"
          >
            <StyledComponent
              basis="33.333333333333336%"
              color="#3949AB"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bwzfXH",
                    "isStatic": false,
                    "lastClassName": "c17",
                    "rules": Array [
                      "
  ",
                      "
    border-width: 0.07142857142857142rem;
    border-style: dashed;
    border-radius: 0rem;
    border-color: #D6D6D6;
  ",
                      "
  ",
                      [Function],
                      "
  ",
                      [Function],
                      "
  border-top: 0;
  border-right: 0;
  padding: ",
                      "1rem",
                      ";
",
                    ],
                  },
                  "displayName": "Styled(LegendItem)",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bwzfXH",
                  "target": [Function],
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              isFirstInRow={false}
              isInLastRow={false}
            >
              <LegendItem
                basis="33.333333333333336%"
                className="c6"
                color="#3949AB"
                isFirstInRow={false}
                isInLastRow={false}
              >
                <item
                  basis="33.333333333333336%"
                  className="c6"
                >
                  <StyledComponent
                    basis="33.333333333333336%"
                    className="c6"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "item-pyuzpd-0",
                          "isStatic": false,
                          "lastClassName": "c5",
                          "rules": Array [
                            "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                          ],
                        },
                        "displayName": "item",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "item-pyuzpd-0",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c6 c2"
                    >
                      <flex
                        alignCenter={true}
                        full={true}
                      >
                        <StyledComponent
                          alignCenter={true}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "flex-x9ump0-0",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:flex-start;align-content:stretch;",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                ],
                              },
                              "displayName": "flex",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "flex-x9ump0-0",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          full={true}
                        >
                          <div
                            className="c3"
                          >
                            <Styled(Component)
                              color="#3949AB"
                              name="square"
                            >
                              <StyledComponent
                                color="#3949AB"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-bdVaJa",
                                      "isStatic": false,
                                      "lastClassName": "c16",
                                      "rules": Array [
                                        "
  color: ",
                                        [Function],
                                        ";
",
                                      ],
                                    },
                                    "displayName": "Styled(Component)",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-bdVaJa",
                                    "target": [Function],
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                name="square"
                              >
                                <Component
                                  className="c10"
                                  color="#3949AB"
                                  name="square"
                                >
                                  <Icon
                                    as="i"
                                    className="c10"
                                    name="square"
                                  >
                                    <i
                                      aria-hidden="true"
                                      className="square icon c10"
                                      onClick={[Function]}
                                    />
                                  </Icon>
                                </Component>
                              </StyledComponent>
                            </Styled(Component)>
                            <item
                              grow={1}
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "item-pyuzpd-0",
                                      "isStatic": false,
                                      "lastClassName": "c5",
                                      "rules": Array [
                                        "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                      ],
                                    },
                                    "displayName": "item",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "item-pyuzpd-0",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                grow={1}
                              >
                                <div
                                  className="c5"
                                >
                                  Ulnam vitae
                                </div>
                              </StyledComponent>
                            </item>
                          </div>
                        </StyledComponent>
                      </flex>
                    </div>
                  </StyledComponent>
                </item>
              </LegendItem>
            </StyledComponent>
          </Styled(LegendItem)>
          <Styled(LegendItem)
            basis="33.333333333333336%"
            color="#1E88E5"
            isFirstInRow={false}
            isInLastRow={false}
            key="Ipsum dolor"
          >
            <StyledComponent
              basis="33.333333333333336%"
              color="#1E88E5"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bwzfXH",
                    "isStatic": false,
                    "lastClassName": "c17",
                    "rules": Array [
                      "
  ",
                      "
    border-width: 0.07142857142857142rem;
    border-style: dashed;
    border-radius: 0rem;
    border-color: #D6D6D6;
  ",
                      "
  ",
                      [Function],
                      "
  ",
                      [Function],
                      "
  border-top: 0;
  border-right: 0;
  padding: ",
                      "1rem",
                      ";
",
                    ],
                  },
                  "displayName": "Styled(LegendItem)",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bwzfXH",
                  "target": [Function],
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              isFirstInRow={false}
              isInLastRow={false}
            >
              <LegendItem
                basis="33.333333333333336%"
                className="c6"
                color="#1E88E5"
                isFirstInRow={false}
                isInLastRow={false}
              >
                <item
                  basis="33.333333333333336%"
                  className="c6"
                >
                  <StyledComponent
                    basis="33.333333333333336%"
                    className="c6"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "item-pyuzpd-0",
                          "isStatic": false,
                          "lastClassName": "c5",
                          "rules": Array [
                            "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                          ],
                        },
                        "displayName": "item",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "item-pyuzpd-0",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c6 c2"
                    >
                      <flex
                        alignCenter={true}
                        full={true}
                      >
                        <StyledComponent
                          alignCenter={true}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "flex-x9ump0-0",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:flex-start;align-content:stretch;",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                ],
                              },
                              "displayName": "flex",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "flex-x9ump0-0",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          full={true}
                        >
                          <div
                            className="c3"
                          >
                            <Styled(Component)
                              color="#1E88E5"
                              name="square"
                            >
                              <StyledComponent
                                color="#1E88E5"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-bdVaJa",
                                      "isStatic": false,
                                      "lastClassName": "c16",
                                      "rules": Array [
                                        "
  color: ",
                                        [Function],
                                        ";
",
                                      ],
                                    },
                                    "displayName": "Styled(Component)",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-bdVaJa",
                                    "target": [Function],
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                name="square"
                              >
                                <Component
                                  className="c11"
                                  color="#1E88E5"
                                  name="square"
                                >
                                  <Icon
                                    as="i"
                                    className="c11"
                                    name="square"
                                  >
                                    <i
                                      aria-hidden="true"
                                      className="square icon c11"
                                      onClick={[Function]}
                                    />
                                  </Icon>
                                </Component>
                              </StyledComponent>
                            </Styled(Component)>
                            <item
                              grow={1}
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "item-pyuzpd-0",
                                      "isStatic": false,
                                      "lastClassName": "c5",
                                      "rules": Array [
                                        "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                      ],
                                    },
                                    "displayName": "item",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "item-pyuzpd-0",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                grow={1}
                              >
                                <div
                                  className="c5"
                                >
                                  Ipsum dolor
                                </div>
                              </StyledComponent>
                            </item>
                          </div>
                        </StyledComponent>
                      </flex>
                    </div>
                  </StyledComponent>
                </item>
              </LegendItem>
            </StyledComponent>
          </Styled(LegendItem)>
          <Styled(LegendItem)
            basis="33.333333333333336%"
            color="#039BE5"
            isFirstInRow={true}
            isInLastRow={false}
            key="Sapien diam"
          >
            <StyledComponent
              basis="33.333333333333336%"
              color="#039BE5"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bwzfXH",
                    "isStatic": false,
                    "lastClassName": "c17",
                    "rules": Array [
                      "
  ",
                      "
    border-width: 0.07142857142857142rem;
    border-style: dashed;
    border-radius: 0rem;
    border-color: #D6D6D6;
  ",
                      "
  ",
                      [Function],
                      "
  ",
                      [Function],
                      "
  border-top: 0;
  border-right: 0;
  padding: ",
                      "1rem",
                      ";
",
                    ],
                  },
                  "displayName": "Styled(LegendItem)",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bwzfXH",
                  "target": [Function],
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              isFirstInRow={true}
              isInLastRow={false}
            >
              <LegendItem
                basis="33.333333333333336%"
                className="c1"
                color="#039BE5"
                isFirstInRow={true}
                isInLastRow={false}
              >
                <item
                  basis="33.333333333333336%"
                  className="c1"
                >
                  <StyledComponent
                    basis="33.333333333333336%"
                    className="c1"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "item-pyuzpd-0",
                          "isStatic": false,
                          "lastClassName": "c5",
                          "rules": Array [
                            "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                          ],
                        },
                        "displayName": "item",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "item-pyuzpd-0",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c1 c2"
                    >
                      <flex
                        alignCenter={true}
                        full={true}
                      >
                        <StyledComponent
                          alignCenter={true}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "flex-x9ump0-0",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:flex-start;align-content:stretch;",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                ],
                              },
                              "displayName": "flex",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "flex-x9ump0-0",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          full={true}
                        >
                          <div
                            className="c3"
                          >
                            <Styled(Component)
                              color="#039BE5"
                              name="square"
                            >
                              <StyledComponent
                                color="#039BE5"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-bdVaJa",
                                      "isStatic": false,
                                      "lastClassName": "c16",
                                      "rules": Array [
                                        "
  color: ",
                                        [Function],
                                        ";
",
                                      ],
                                    },
                                    "displayName": "Styled(Component)",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-bdVaJa",
                                    "target": [Function],
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                name="square"
                              >
                                <Component
                                  className="c12"
                                  color="#039BE5"
                                  name="square"
                                >
                                  <Icon
                                    as="i"
                                    className="c12"
                                    name="square"
                                  >
                                    <i
                                      aria-hidden="true"
                                      className="square icon c12"
                                      onClick={[Function]}
                                    />
                                  </Icon>
                                </Component>
                              </StyledComponent>
                            </Styled(Component)>
                            <item
                              grow={1}
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "item-pyuzpd-0",
                                      "isStatic": false,
                                      "lastClassName": "c5",
                                      "rules": Array [
                                        "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                      ],
                                    },
                                    "displayName": "item",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "item-pyuzpd-0",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                grow={1}
                              >
                                <div
                                  className="c5"
                                >
                                  Sapien diam
                                </div>
                              </StyledComponent>
                            </item>
                          </div>
                        </StyledComponent>
                      </flex>
                    </div>
                  </StyledComponent>
                </item>
              </LegendItem>
            </StyledComponent>
          </Styled(LegendItem)>
          <Styled(LegendItem)
            basis="33.333333333333336%"
            color="#00ACC1"
            isFirstInRow={false}
            isInLastRow={false}
            key="Pellentesque amet"
          >
            <StyledComponent
              basis="33.333333333333336%"
              color="#00ACC1"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bwzfXH",
                    "isStatic": false,
                    "lastClassName": "c17",
                    "rules": Array [
                      "
  ",
                      "
    border-width: 0.07142857142857142rem;
    border-style: dashed;
    border-radius: 0rem;
    border-color: #D6D6D6;
  ",
                      "
  ",
                      [Function],
                      "
  ",
                      [Function],
                      "
  border-top: 0;
  border-right: 0;
  padding: ",
                      "1rem",
                      ";
",
                    ],
                  },
                  "displayName": "Styled(LegendItem)",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bwzfXH",
                  "target": [Function],
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              isFirstInRow={false}
              isInLastRow={false}
            >
              <LegendItem
                basis="33.333333333333336%"
                className="c6"
                color="#00ACC1"
                isFirstInRow={false}
                isInLastRow={false}
              >
                <item
                  basis="33.333333333333336%"
                  className="c6"
                >
                  <StyledComponent
                    basis="33.333333333333336%"
                    className="c6"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "item-pyuzpd-0",
                          "isStatic": false,
                          "lastClassName": "c5",
                          "rules": Array [
                            "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                          ],
                        },
                        "displayName": "item",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "item-pyuzpd-0",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c6 c2"
                    >
                      <flex
                        alignCenter={true}
                        full={true}
                      >
                        <StyledComponent
                          alignCenter={true}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "flex-x9ump0-0",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:flex-start;align-content:stretch;",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                ],
                              },
                              "displayName": "flex",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "flex-x9ump0-0",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          full={true}
                        >
                          <div
                            className="c3"
                          >
                            <Styled(Component)
                              color="#00ACC1"
                              name="square"
                            >
                              <StyledComponent
                                color="#00ACC1"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-bdVaJa",
                                      "isStatic": false,
                                      "lastClassName": "c16",
                                      "rules": Array [
                                        "
  color: ",
                                        [Function],
                                        ";
",
                                      ],
                                    },
                                    "displayName": "Styled(Component)",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-bdVaJa",
                                    "target": [Function],
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                name="square"
                              >
                                <Component
                                  className="c13"
                                  color="#00ACC1"
                                  name="square"
                                >
                                  <Icon
                                    as="i"
                                    className="c13"
                                    name="square"
                                  >
                                    <i
                                      aria-hidden="true"
                                      className="square icon c13"
                                      onClick={[Function]}
                                    />
                                  </Icon>
                                </Component>
                              </StyledComponent>
                            </Styled(Component)>
                            <item
                              grow={1}
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "item-pyuzpd-0",
                                      "isStatic": false,
                                      "lastClassName": "c5",
                                      "rules": Array [
                                        "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                      ],
                                    },
                                    "displayName": "item",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "item-pyuzpd-0",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                grow={1}
                              >
                                <div
                                  className="c5"
                                >
                                  Pellentesque amet
                                </div>
                              </StyledComponent>
                            </item>
                          </div>
                        </StyledComponent>
                      </flex>
                    </div>
                  </StyledComponent>
                </item>
              </LegendItem>
            </StyledComponent>
          </Styled(LegendItem)>
          <Styled(LegendItem)
            basis="33.333333333333336%"
            color="#43A047"
            isFirstInRow={false}
            isInLastRow={false}
            key="Diam dolor sapien"
          >
            <StyledComponent
              basis="33.333333333333336%"
              color="#43A047"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bwzfXH",
                    "isStatic": false,
                    "lastClassName": "c17",
                    "rules": Array [
                      "
  ",
                      "
    border-width: 0.07142857142857142rem;
    border-style: dashed;
    border-radius: 0rem;
    border-color: #D6D6D6;
  ",
                      "
  ",
                      [Function],
                      "
  ",
                      [Function],
                      "
  border-top: 0;
  border-right: 0;
  padding: ",
                      "1rem",
                      ";
",
                    ],
                  },
                  "displayName": "Styled(LegendItem)",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bwzfXH",
                  "target": [Function],
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              isFirstInRow={false}
              isInLastRow={false}
            >
              <LegendItem
                basis="33.333333333333336%"
                className="c6"
                color="#43A047"
                isFirstInRow={false}
                isInLastRow={false}
              >
                <item
                  basis="33.333333333333336%"
                  className="c6"
                >
                  <StyledComponent
                    basis="33.333333333333336%"
                    className="c6"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "item-pyuzpd-0",
                          "isStatic": false,
                          "lastClassName": "c5",
                          "rules": Array [
                            "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                          ],
                        },
                        "displayName": "item",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "item-pyuzpd-0",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c6 c2"
                    >
                      <flex
                        alignCenter={true}
                        full={true}
                      >
                        <StyledComponent
                          alignCenter={true}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "flex-x9ump0-0",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:flex-start;align-content:stretch;",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                ],
                              },
                              "displayName": "flex",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "flex-x9ump0-0",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          full={true}
                        >
                          <div
                            className="c3"
                          >
                            <Styled(Component)
                              color="#43A047"
                              name="square"
                            >
                              <StyledComponent
                                color="#43A047"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-bdVaJa",
                                      "isStatic": false,
                                      "lastClassName": "c16",
                                      "rules": Array [
                                        "
  color: ",
                                        [Function],
                                        ";
",
                                      ],
                                    },
                                    "displayName": "Styled(Component)",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-bdVaJa",
                                    "target": [Function],
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                name="square"
                              >
                                <Component
                                  className="c14"
                                  color="#43A047"
                                  name="square"
                                >
                                  <Icon
                                    as="i"
                                    className="c14"
                                    name="square"
                                  >
                                    <i
                                      aria-hidden="true"
                                      className="square icon c14"
                                      onClick={[Function]}
                                    />
                                  </Icon>
                                </Component>
                              </StyledComponent>
                            </Styled(Component)>
                            <item
                              grow={1}
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "item-pyuzpd-0",
                                      "isStatic": false,
                                      "lastClassName": "c5",
                                      "rules": Array [
                                        "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                      ],
                                    },
                                    "displayName": "item",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "item-pyuzpd-0",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                grow={1}
                              >
                                <div
                                  className="c5"
                                >
                                  Diam dolor sapien
                                </div>
                              </StyledComponent>
                            </item>
                          </div>
                        </StyledComponent>
                      </flex>
                    </div>
                  </StyledComponent>
                </item>
              </LegendItem>
            </StyledComponent>
          </Styled(LegendItem)>
          <Styled(LegendItem)
            basis="33.333333333333336%"
            color="#7CB342"
            isFirstInRow={true}
            isInLastRow={true}
            key="Vitae ulnam"
          >
            <StyledComponent
              basis="33.333333333333336%"
              color="#7CB342"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bwzfXH",
                    "isStatic": false,
                    "lastClassName": "c17",
                    "rules": Array [
                      "
  ",
                      "
    border-width: 0.07142857142857142rem;
    border-style: dashed;
    border-radius: 0rem;
    border-color: #D6D6D6;
  ",
                      "
  ",
                      [Function],
                      "
  ",
                      [Function],
                      "
  border-top: 0;
  border-right: 0;
  padding: ",
                      "1rem",
                      ";
",
                    ],
                  },
                  "displayName": "Styled(LegendItem)",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bwzfXH",
                  "target": [Function],
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              isFirstInRow={true}
              isInLastRow={true}
            >
              <LegendItem
                basis="33.333333333333336%"
                className="c15"
                color="#7CB342"
                isFirstInRow={true}
                isInLastRow={true}
              >
                <item
                  basis="33.333333333333336%"
                  className="c15"
                >
                  <StyledComponent
                    basis="33.333333333333336%"
                    className="c15"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "item-pyuzpd-0",
                          "isStatic": false,
                          "lastClassName": "c5",
                          "rules": Array [
                            "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                          ],
                        },
                        "displayName": "item",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "item-pyuzpd-0",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c15 c2"
                    >
                      <flex
                        alignCenter={true}
                        full={true}
                      >
                        <StyledComponent
                          alignCenter={true}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "flex-x9ump0-0",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:flex-start;align-content:stretch;",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                ],
                              },
                              "displayName": "flex",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "flex-x9ump0-0",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          full={true}
                        >
                          <div
                            className="c3"
                          >
                            <Styled(Component)
                              color="#7CB342"
                              name="square"
                            >
                              <StyledComponent
                                color="#7CB342"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-bdVaJa",
                                      "isStatic": false,
                                      "lastClassName": "c16",
                                      "rules": Array [
                                        "
  color: ",
                                        [Function],
                                        ";
",
                                      ],
                                    },
                                    "displayName": "Styled(Component)",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-bdVaJa",
                                    "target": [Function],
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                name="square"
                              >
                                <Component
                                  className="c16"
                                  color="#7CB342"
                                  name="square"
                                >
                                  <Icon
                                    as="i"
                                    className="c16"
                                    name="square"
                                  >
                                    <i
                                      aria-hidden="true"
                                      className="square icon c16"
                                      onClick={[Function]}
                                    />
                                  </Icon>
                                </Component>
                              </StyledComponent>
                            </Styled(Component)>
                            <item
                              grow={1}
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "item-pyuzpd-0",
                                      "isStatic": false,
                                      "lastClassName": "c5",
                                      "rules": Array [
                                        "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                      ],
                                    },
                                    "displayName": "item",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "item-pyuzpd-0",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                grow={1}
                              >
                                <div
                                  className="c5"
                                >
                                  Vitae ulnam
                                </div>
                              </StyledComponent>
                            </item>
                          </div>
                        </StyledComponent>
                      </flex>
                    </div>
                  </StyledComponent>
                </item>
              </LegendItem>
            </StyledComponent>
          </Styled(LegendItem)>
          <Styled(LegendItem)
            basis="33.333333333333336%"
            isFirstInRow={false}
            isInLastRow={true}
            key="10"
          >
            <StyledComponent
              basis="33.333333333333336%"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bwzfXH",
                    "isStatic": false,
                    "lastClassName": "c17",
                    "rules": Array [
                      "
  ",
                      "
    border-width: 0.07142857142857142rem;
    border-style: dashed;
    border-radius: 0rem;
    border-color: #D6D6D6;
  ",
                      "
  ",
                      [Function],
                      "
  ",
                      [Function],
                      "
  border-top: 0;
  border-right: 0;
  padding: ",
                      "1rem",
                      ";
",
                    ],
                  },
                  "displayName": "Styled(LegendItem)",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bwzfXH",
                  "target": [Function],
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              isFirstInRow={false}
              isInLastRow={true}
            >
              <LegendItem
                basis="33.333333333333336%"
                className="c17"
                isFirstInRow={false}
                isInLastRow={true}
              >
                <item
                  basis="33.333333333333336%"
                  className="c17"
                >
                  <StyledComponent
                    basis="33.333333333333336%"
                    className="c17"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "item-pyuzpd-0",
                          "isStatic": false,
                          "lastClassName": "c5",
                          "rules": Array [
                            "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                          ],
                        },
                        "displayName": "item",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "item-pyuzpd-0",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c17 c2"
                    >
                      <flex
                        alignCenter={true}
                        full={true}
                      >
                        <StyledComponent
                          alignCenter={true}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "flex-x9ump0-0",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:flex-start;align-content:stretch;",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                ],
                              },
                              "displayName": "flex",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "flex-x9ump0-0",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          full={true}
                        >
                          <div
                            className="c3"
                          >
                            <item
                              grow={1}
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "item-pyuzpd-0",
                                      "isStatic": false,
                                      "lastClassName": "c5",
                                      "rules": Array [
                                        "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                      ],
                                    },
                                    "displayName": "item",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "item-pyuzpd-0",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                grow={1}
                              >
                                <div
                                  className="c5"
                                />
                              </StyledComponent>
                            </item>
                          </div>
                        </StyledComponent>
                      </flex>
                    </div>
                  </StyledComponent>
                </item>
              </LegendItem>
            </StyledComponent>
          </Styled(LegendItem)>
          <Styled(LegendItem)
            basis="33.333333333333336%"
            isFirstInRow={false}
            isInLastRow={true}
            key="11"
          >
            <StyledComponent
              basis="33.333333333333336%"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bwzfXH",
                    "isStatic": false,
                    "lastClassName": "c17",
                    "rules": Array [
                      "
  ",
                      "
    border-width: 0.07142857142857142rem;
    border-style: dashed;
    border-radius: 0rem;
    border-color: #D6D6D6;
  ",
                      "
  ",
                      [Function],
                      "
  ",
                      [Function],
                      "
  border-top: 0;
  border-right: 0;
  padding: ",
                      "1rem",
                      ";
",
                    ],
                  },
                  "displayName": "Styled(LegendItem)",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bwzfXH",
                  "target": [Function],
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              isFirstInRow={false}
              isInLastRow={true}
            >
              <LegendItem
                basis="33.333333333333336%"
                className="c17"
                isFirstInRow={false}
                isInLastRow={true}
              >
                <item
                  basis="33.333333333333336%"
                  className="c17"
                >
                  <StyledComponent
                    basis="33.333333333333336%"
                    className="c17"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "item-pyuzpd-0",
                          "isStatic": false,
                          "lastClassName": "c5",
                          "rules": Array [
                            "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                          ],
                        },
                        "displayName": "item",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "item-pyuzpd-0",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c17 c2"
                    >
                      <flex
                        alignCenter={true}
                        full={true}
                      >
                        <StyledComponent
                          alignCenter={true}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "flex-x9ump0-0",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:flex-start;align-content:stretch;",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                ],
                              },
                              "displayName": "flex",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "flex-x9ump0-0",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          full={true}
                        >
                          <div
                            className="c3"
                          >
                            <item
                              grow={1}
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "item-pyuzpd-0",
                                      "isStatic": false,
                                      "lastClassName": "c5",
                                      "rules": Array [
                                        "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                      ],
                                    },
                                    "displayName": "item",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "item-pyuzpd-0",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                grow={1}
                              >
                                <div
                                  className="c5"
                                />
                              </StyledComponent>
                            </item>
                          </div>
                        </StyledComponent>
                      </flex>
                    </div>
                  </StyledComponent>
                </item>
              </LegendItem>
            </StyledComponent>
          </Styled(LegendItem)>
        </div>
      </StyledComponent>
    </flex>
  </GraphLegend>
  <GraphLegend
    columns={5}
    items={
      Immutable.List [
        Immutable.Map {
          "label": "Lorem ipsum dolor",
        },
        Immutable.Map {
          "label": "Diam sapien",
          "value": "$54,234",
        },
        Immutable.Map {
          "label": "Pellentesque",
        },
        Immutable.Map {
          "label": "Amet diam",
          "value": "Some",
        },
        Immutable.Map {
          "label": "Ulnam vitae",
        },
        Immutable.Map {
          "label": "Ipsum dolor",
        },
        Immutable.Map {
          "label": "Sapien diam",
        },
        Immutable.Map {
          "label": "Pellentesque amet",
        },
        Immutable.Map {
          "label": "Diam dolor sapien",
        },
        Immutable.Map {
          "label": "Vitae ulnam",
        },
      ]
    }
    palette={
      ColorPalette {
        "cache": Object {
          "068bd95f1f2605c97c69f8cadd5cc2e449269535": "#8E24AA",
          "08a0641b040fbf5ace67d6c29d035fc951dbe176": "#039BE5",
          "2e6fe8785ce797e8629cc8dc2ed5e79e72a96781": "#5E35B1",
          "55325ab577b56cc4596966d646892286acfa95e1": "#1E88E5",
          "5a701e07e01def1094f63fd9cdaa63ea6e45bf19": "#e53935",
          "6fb112f98c83b100eae6ff55e0378342f591c0b5": "#00ACC1",
          "a52c2792d30f345492735d42190c246939168a6b": "#D81B60",
          "cc17abe04657c084651640877dcc3b876a6f1756": "#43A047",
          "ce970448c761dd0ec0b0e734b6ab305c796a8268": "#3949AB",
          "e047b4e7fbf5820134d60ea7d0da2e25e0283310": "#7CB342",
        },
        "getRandomColor": [Function],
      }
    }
  >
    <flex
      full={true}
      wrap="wrap"
    >
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "flex-x9ump0-0",
              "isStatic": false,
              "lastClassName": "c3",
              "rules": Array [
                "display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:flex-start;align-content:stretch;",
                [Function],
                ";",
                [Function],
                ";",
                [Function],
                ";",
                [Function],
                ";",
                [Function],
                ";",
                [Function],
                ";",
                [Function],
                ";",
                [Function],
                ";",
                [Function],
                ";",
                [Function],
                ";",
                [Function],
                ";",
                [Function],
                ";",
                [Function],
                ";",
                [Function],
                ";",
                [Function],
                ";",
                [Function],
                ";",
                [Function],
                ";",
                [Function],
                ";",
                [Function],
                ";",
                [Function],
                ";",
                [Function],
                ";",
                [Function],
                ";",
                [Function],
                ";",
                [Function],
                ";",
                [Function],
                ";",
                [Function],
                ";",
              ],
            },
            "displayName": "flex",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "flex-x9ump0-0",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        full={true}
        wrap="wrap"
      >
        <div
          className="c0"
          wrap="wrap"
        >
          <Styled(LegendItem)
            basis="20%"
            color="#e53935"
            isFirstInRow={true}
            isInLastRow={false}
            key="Lorem ipsum dolor"
          >
            <StyledComponent
              basis="20%"
              color="#e53935"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bwzfXH",
                    "isStatic": false,
                    "lastClassName": "c17",
                    "rules": Array [
                      "
  ",
                      "
    border-width: 0.07142857142857142rem;
    border-style: dashed;
    border-radius: 0rem;
    border-color: #D6D6D6;
  ",
                      "
  ",
                      [Function],
                      "
  ",
                      [Function],
                      "
  border-top: 0;
  border-right: 0;
  padding: ",
                      "1rem",
                      ";
",
                    ],
                  },
                  "displayName": "Styled(LegendItem)",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bwzfXH",
                  "target": [Function],
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              isFirstInRow={true}
              isInLastRow={false}
            >
              <LegendItem
                basis="20%"
                className="c1"
                color="#e53935"
                isFirstInRow={true}
                isInLastRow={false}
              >
                <item
                  basis="20%"
                  className="c1"
                >
                  <StyledComponent
                    basis="20%"
                    className="c1"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "item-pyuzpd-0",
                          "isStatic": false,
                          "lastClassName": "c5",
                          "rules": Array [
                            "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                          ],
                        },
                        "displayName": "item",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "item-pyuzpd-0",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c1 c18"
                    >
                      <flex
                        alignCenter={true}
                        full={true}
                      >
                        <StyledComponent
                          alignCenter={true}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "flex-x9ump0-0",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:flex-start;align-content:stretch;",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                ],
                              },
                              "displayName": "flex",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "flex-x9ump0-0",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          full={true}
                        >
                          <div
                            className="c3"
                          >
                            <Styled(Component)
                              color="#e53935"
                              name="square"
                            >
                              <StyledComponent
                                color="#e53935"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-bdVaJa",
                                      "isStatic": false,
                                      "lastClassName": "c16",
                                      "rules": Array [
                                        "
  color: ",
                                        [Function],
                                        ";
",
                                      ],
                                    },
                                    "displayName": "Styled(Component)",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-bdVaJa",
                                    "target": [Function],
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                name="square"
                              >
                                <Component
                                  className="c4"
                                  color="#e53935"
                                  name="square"
                                >
                                  <Icon
                                    as="i"
                                    className="c4"
                                    name="square"
                                  >
                                    <i
                                      aria-hidden="true"
                                      className="square icon c4"
                                      onClick={[Function]}
                                    />
                                  </Icon>
                                </Component>
                              </StyledComponent>
                            </Styled(Component)>
                            <item
                              grow={1}
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "item-pyuzpd-0",
                                      "isStatic": false,
                                      "lastClassName": "c5",
                                      "rules": Array [
                                        "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                      ],
                                    },
                                    "displayName": "item",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "item-pyuzpd-0",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                grow={1}
                              >
                                <div
                                  className="c5"
                                >
                                  Lorem ipsum dolor
                                </div>
                              </StyledComponent>
                            </item>
                          </div>
                        </StyledComponent>
                      </flex>
                    </div>
                  </StyledComponent>
                </item>
              </LegendItem>
            </StyledComponent>
          </Styled(LegendItem)>
          <Styled(LegendItem)
            basis="20%"
            color="#D81B60"
            isFirstInRow={false}
            isInLastRow={false}
            key="Diam sapien"
            value="$54,234"
          >
            <StyledComponent
              basis="20%"
              color="#D81B60"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bwzfXH",
                    "isStatic": false,
                    "lastClassName": "c17",
                    "rules": Array [
                      "
  ",
                      "
    border-width: 0.07142857142857142rem;
    border-style: dashed;
    border-radius: 0rem;
    border-color: #D6D6D6;
  ",
                      "
  ",
                      [Function],
                      "
  ",
                      [Function],
                      "
  border-top: 0;
  border-right: 0;
  padding: ",
                      "1rem",
                      ";
",
                    ],
                  },
                  "displayName": "Styled(LegendItem)",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bwzfXH",
                  "target": [Function],
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              isFirstInRow={false}
              isInLastRow={false}
              value="$54,234"
            >
              <LegendItem
                basis="20%"
                className="c6"
                color="#D81B60"
                isFirstInRow={false}
                isInLastRow={false}
                value="$54,234"
              >
                <item
                  basis="20%"
                  className="c6"
                >
                  <StyledComponent
                    basis="20%"
                    className="c6"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "item-pyuzpd-0",
                          "isStatic": false,
                          "lastClassName": "c5",
                          "rules": Array [
                            "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                          ],
                        },
                        "displayName": "item",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "item-pyuzpd-0",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c6 c18"
                    >
                      <flex
                        alignCenter={true}
                        full={true}
                      >
                        <StyledComponent
                          alignCenter={true}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "flex-x9ump0-0",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:flex-start;align-content:stretch;",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                ],
                              },
                              "displayName": "flex",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "flex-x9ump0-0",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          full={true}
                        >
                          <div
                            className="c3"
                          >
                            <Styled(Component)
                              color="#D81B60"
                              name="square"
                            >
                              <StyledComponent
                                color="#D81B60"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-bdVaJa",
                                      "isStatic": false,
                                      "lastClassName": "c16",
                                      "rules": Array [
                                        "
  color: ",
                                        [Function],
                                        ";
",
                                      ],
                                    },
                                    "displayName": "Styled(Component)",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-bdVaJa",
                                    "target": [Function],
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                name="square"
                              >
                                <Component
                                  className="c7"
                                  color="#D81B60"
                                  name="square"
                                >
                                  <Icon
                                    as="i"
                                    className="c7"
                                    name="square"
                                  >
                                    <i
                                      aria-hidden="true"
                                      className="square icon c7"
                                      onClick={[Function]}
                                    />
                                  </Icon>
                                </Component>
                              </StyledComponent>
                            </Styled(Component)>
                            <item
                              grow={1}
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "item-pyuzpd-0",
                                      "isStatic": false,
                                      "lastClassName": "c5",
                                      "rules": Array [
                                        "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                      ],
                                    },
                                    "displayName": "item",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "item-pyuzpd-0",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                grow={1}
                              >
                                <div
                                  className="c5"
                                >
                                  Diam sapien
                                </div>
                              </StyledComponent>
                            </item>
                            <span>
                              $54,234
                            </span>
                          </div>
                        </StyledComponent>
                      </flex>
                    </div>
                  </StyledComponent>
                </item>
              </LegendItem>
            </StyledComponent>
          </Styled(LegendItem)>
          <Styled(LegendItem)
            basis="20%"
            color="#8E24AA"
            isFirstInRow={false}
            isInLastRow={false}
            key="Pellentesque"
          >
            <StyledComponent
              basis="20%"
              color="#8E24AA"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bwzfXH",
                    "isStatic": false,
                    "lastClassName": "c17",
                    "rules": Array [
                      "
  ",
                      "
    border-width: 0.07142857142857142rem;
    border-style: dashed;
    border-radius: 0rem;
    border-color: #D6D6D6;
  ",
                      "
  ",
                      [Function],
                      "
  ",
                      [Function],
                      "
  border-top: 0;
  border-right: 0;
  padding: ",
                      "1rem",
                      ";
",
                    ],
                  },
                  "displayName": "Styled(LegendItem)",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bwzfXH",
                  "target": [Function],
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              isFirstInRow={false}
              isInLastRow={false}
            >
              <LegendItem
                basis="20%"
                className="c6"
                color="#8E24AA"
                isFirstInRow={false}
                isInLastRow={false}
              >
                <item
                  basis="20%"
                  className="c6"
                >
                  <StyledComponent
                    basis="20%"
                    className="c6"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "item-pyuzpd-0",
                          "isStatic": false,
                          "lastClassName": "c5",
                          "rules": Array [
                            "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                          ],
                        },
                        "displayName": "item",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "item-pyuzpd-0",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c6 c18"
                    >
                      <flex
                        alignCenter={true}
                        full={true}
                      >
                        <StyledComponent
                          alignCenter={true}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "flex-x9ump0-0",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:flex-start;align-content:stretch;",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                ],
                              },
                              "displayName": "flex",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "flex-x9ump0-0",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          full={true}
                        >
                          <div
                            className="c3"
                          >
                            <Styled(Component)
                              color="#8E24AA"
                              name="square"
                            >
                              <StyledComponent
                                color="#8E24AA"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-bdVaJa",
                                      "isStatic": false,
                                      "lastClassName": "c16",
                                      "rules": Array [
                                        "
  color: ",
                                        [Function],
                                        ";
",
                                      ],
                                    },
                                    "displayName": "Styled(Component)",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-bdVaJa",
                                    "target": [Function],
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                name="square"
                              >
                                <Component
                                  className="c8"
                                  color="#8E24AA"
                                  name="square"
                                >
                                  <Icon
                                    as="i"
                                    className="c8"
                                    name="square"
                                  >
                                    <i
                                      aria-hidden="true"
                                      className="square icon c8"
                                      onClick={[Function]}
                                    />
                                  </Icon>
                                </Component>
                              </StyledComponent>
                            </Styled(Component)>
                            <item
                              grow={1}
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "item-pyuzpd-0",
                                      "isStatic": false,
                                      "lastClassName": "c5",
                                      "rules": Array [
                                        "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                      ],
                                    },
                                    "displayName": "item",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "item-pyuzpd-0",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                grow={1}
                              >
                                <div
                                  className="c5"
                                >
                                  Pellentesque
                                </div>
                              </StyledComponent>
                            </item>
                          </div>
                        </StyledComponent>
                      </flex>
                    </div>
                  </StyledComponent>
                </item>
              </LegendItem>
            </StyledComponent>
          </Styled(LegendItem)>
          <Styled(LegendItem)
            basis="20%"
            color="#5E35B1"
            isFirstInRow={false}
            isInLastRow={false}
            key="Amet diam"
            value="Some"
          >
            <StyledComponent
              basis="20%"
              color="#5E35B1"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bwzfXH",
                    "isStatic": false,
                    "lastClassName": "c17",
                    "rules": Array [
                      "
  ",
                      "
    border-width: 0.07142857142857142rem;
    border-style: dashed;
    border-radius: 0rem;
    border-color: #D6D6D6;
  ",
                      "
  ",
                      [Function],
                      "
  ",
                      [Function],
                      "
  border-top: 0;
  border-right: 0;
  padding: ",
                      "1rem",
                      ";
",
                    ],
                  },
                  "displayName": "Styled(LegendItem)",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bwzfXH",
                  "target": [Function],
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              isFirstInRow={false}
              isInLastRow={false}
              value="Some"
            >
              <LegendItem
                basis="20%"
                className="c6"
                color="#5E35B1"
                isFirstInRow={false}
                isInLastRow={false}
                value="Some"
              >
                <item
                  basis="20%"
                  className="c6"
                >
                  <StyledComponent
                    basis="20%"
                    className="c6"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "item-pyuzpd-0",
                          "isStatic": false,
                          "lastClassName": "c5",
                          "rules": Array [
                            "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                          ],
                        },
                        "displayName": "item",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "item-pyuzpd-0",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c6 c18"
                    >
                      <flex
                        alignCenter={true}
                        full={true}
                      >
                        <StyledComponent
                          alignCenter={true}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "flex-x9ump0-0",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:flex-start;align-content:stretch;",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                ],
                              },
                              "displayName": "flex",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "flex-x9ump0-0",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          full={true}
                        >
                          <div
                            className="c3"
                          >
                            <Styled(Component)
                              color="#5E35B1"
                              name="square"
                            >
                              <StyledComponent
                                color="#5E35B1"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-bdVaJa",
                                      "isStatic": false,
                                      "lastClassName": "c16",
                                      "rules": Array [
                                        "
  color: ",
                                        [Function],
                                        ";
",
                                      ],
                                    },
                                    "displayName": "Styled(Component)",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-bdVaJa",
                                    "target": [Function],
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                name="square"
                              >
                                <Component
                                  className="c9"
                                  color="#5E35B1"
                                  name="square"
                                >
                                  <Icon
                                    as="i"
                                    className="c9"
                                    name="square"
                                  >
                                    <i
                                      aria-hidden="true"
                                      className="square icon c9"
                                      onClick={[Function]}
                                    />
                                  </Icon>
                                </Component>
                              </StyledComponent>
                            </Styled(Component)>
                            <item
                              grow={1}
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "item-pyuzpd-0",
                                      "isStatic": false,
                                      "lastClassName": "c5",
                                      "rules": Array [
                                        "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                      ],
                                    },
                                    "displayName": "item",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "item-pyuzpd-0",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                grow={1}
                              >
                                <div
                                  className="c5"
                                >
                                  Amet diam
                                </div>
                              </StyledComponent>
                            </item>
                            <span>
                              Some
                            </span>
                          </div>
                        </StyledComponent>
                      </flex>
                    </div>
                  </StyledComponent>
                </item>
              </LegendItem>
            </StyledComponent>
          </Styled(LegendItem)>
          <Styled(LegendItem)
            basis="20%"
            color="#3949AB"
            isFirstInRow={false}
            isInLastRow={false}
            key="Ulnam vitae"
          >
            <StyledComponent
              basis="20%"
              color="#3949AB"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bwzfXH",
                    "isStatic": false,
                    "lastClassName": "c17",
                    "rules": Array [
                      "
  ",
                      "
    border-width: 0.07142857142857142rem;
    border-style: dashed;
    border-radius: 0rem;
    border-color: #D6D6D6;
  ",
                      "
  ",
                      [Function],
                      "
  ",
                      [Function],
                      "
  border-top: 0;
  border-right: 0;
  padding: ",
                      "1rem",
                      ";
",
                    ],
                  },
                  "displayName": "Styled(LegendItem)",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bwzfXH",
                  "target": [Function],
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              isFirstInRow={false}
              isInLastRow={false}
            >
              <LegendItem
                basis="20%"
                className="c6"
                color="#3949AB"
                isFirstInRow={false}
                isInLastRow={false}
              >
                <item
                  basis="20%"
                  className="c6"
                >
                  <StyledComponent
                    basis="20%"
                    className="c6"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "item-pyuzpd-0",
                          "isStatic": false,
                          "lastClassName": "c5",
                          "rules": Array [
                            "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                          ],
                        },
                        "displayName": "item",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "item-pyuzpd-0",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c6 c18"
                    >
                      <flex
                        alignCenter={true}
                        full={true}
                      >
                        <StyledComponent
                          alignCenter={true}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "flex-x9ump0-0",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:flex-start;align-content:stretch;",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                ],
                              },
                              "displayName": "flex",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "flex-x9ump0-0",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          full={true}
                        >
                          <div
                            className="c3"
                          >
                            <Styled(Component)
                              color="#3949AB"
                              name="square"
                            >
                              <StyledComponent
                                color="#3949AB"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-bdVaJa",
                                      "isStatic": false,
                                      "lastClassName": "c16",
                                      "rules": Array [
                                        "
  color: ",
                                        [Function],
                                        ";
",
                                      ],
                                    },
                                    "displayName": "Styled(Component)",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-bdVaJa",
                                    "target": [Function],
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                name="square"
                              >
                                <Component
                                  className="c10"
                                  color="#3949AB"
                                  name="square"
                                >
                                  <Icon
                                    as="i"
                                    className="c10"
                                    name="square"
                                  >
                                    <i
                                      aria-hidden="true"
                                      className="square icon c10"
                                      onClick={[Function]}
                                    />
                                  </Icon>
                                </Component>
                              </StyledComponent>
                            </Styled(Component)>
                            <item
                              grow={1}
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "item-pyuzpd-0",
                                      "isStatic": false,
                                      "lastClassName": "c5",
                                      "rules": Array [
                                        "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                      ],
                                    },
                                    "displayName": "item",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "item-pyuzpd-0",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                grow={1}
                              >
                                <div
                                  className="c5"
                                >
                                  Ulnam vitae
                                </div>
                              </StyledComponent>
                            </item>
                          </div>
                        </StyledComponent>
                      </flex>
                    </div>
                  </StyledComponent>
                </item>
              </LegendItem>
            </StyledComponent>
          </Styled(LegendItem)>
          <Styled(LegendItem)
            basis="20%"
            color="#1E88E5"
            isFirstInRow={true}
            isInLastRow={true}
            key="Ipsum dolor"
          >
            <StyledComponent
              basis="20%"
              color="#1E88E5"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bwzfXH",
                    "isStatic": false,
                    "lastClassName": "c17",
                    "rules": Array [
                      "
  ",
                      "
    border-width: 0.07142857142857142rem;
    border-style: dashed;
    border-radius: 0rem;
    border-color: #D6D6D6;
  ",
                      "
  ",
                      [Function],
                      "
  ",
                      [Function],
                      "
  border-top: 0;
  border-right: 0;
  padding: ",
                      "1rem",
                      ";
",
                    ],
                  },
                  "displayName": "Styled(LegendItem)",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bwzfXH",
                  "target": [Function],
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              isFirstInRow={true}
              isInLastRow={true}
            >
              <LegendItem
                basis="20%"
                className="c15"
                color="#1E88E5"
                isFirstInRow={true}
                isInLastRow={true}
              >
                <item
                  basis="20%"
                  className="c15"
                >
                  <StyledComponent
                    basis="20%"
                    className="c15"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "item-pyuzpd-0",
                          "isStatic": false,
                          "lastClassName": "c5",
                          "rules": Array [
                            "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                          ],
                        },
                        "displayName": "item",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "item-pyuzpd-0",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c15 c18"
                    >
                      <flex
                        alignCenter={true}
                        full={true}
                      >
                        <StyledComponent
                          alignCenter={true}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "flex-x9ump0-0",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:flex-start;align-content:stretch;",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                ],
                              },
                              "displayName": "flex",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "flex-x9ump0-0",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          full={true}
                        >
                          <div
                            className="c3"
                          >
                            <Styled(Component)
                              color="#1E88E5"
                              name="square"
                            >
                              <StyledComponent
                                color="#1E88E5"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-bdVaJa",
                                      "isStatic": false,
                                      "lastClassName": "c16",
                                      "rules": Array [
                                        "
  color: ",
                                        [Function],
                                        ";
",
                                      ],
                                    },
                                    "displayName": "Styled(Component)",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-bdVaJa",
                                    "target": [Function],
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                name="square"
                              >
                                <Component
                                  className="c11"
                                  color="#1E88E5"
                                  name="square"
                                >
                                  <Icon
                                    as="i"
                                    className="c11"
                                    name="square"
                                  >
                                    <i
                                      aria-hidden="true"
                                      className="square icon c11"
                                      onClick={[Function]}
                                    />
                                  </Icon>
                                </Component>
                              </StyledComponent>
                            </Styled(Component)>
                            <item
                              grow={1}
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "item-pyuzpd-0",
                                      "isStatic": false,
                                      "lastClassName": "c5",
                                      "rules": Array [
                                        "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                      ],
                                    },
                                    "displayName": "item",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "item-pyuzpd-0",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                grow={1}
                              >
                                <div
                                  className="c5"
                                >
                                  Ipsum dolor
                                </div>
                              </StyledComponent>
                            </item>
                          </div>
                        </StyledComponent>
                      </flex>
                    </div>
                  </StyledComponent>
                </item>
              </LegendItem>
            </StyledComponent>
          </Styled(LegendItem)>
          <Styled(LegendItem)
            basis="20%"
            color="#039BE5"
            isFirstInRow={false}
            isInLastRow={true}
            key="Sapien diam"
          >
            <StyledComponent
              basis="20%"
              color="#039BE5"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bwzfXH",
                    "isStatic": false,
                    "lastClassName": "c17",
                    "rules": Array [
                      "
  ",
                      "
    border-width: 0.07142857142857142rem;
    border-style: dashed;
    border-radius: 0rem;
    border-color: #D6D6D6;
  ",
                      "
  ",
                      [Function],
                      "
  ",
                      [Function],
                      "
  border-top: 0;
  border-right: 0;
  padding: ",
                      "1rem",
                      ";
",
                    ],
                  },
                  "displayName": "Styled(LegendItem)",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bwzfXH",
                  "target": [Function],
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              isFirstInRow={false}
              isInLastRow={true}
            >
              <LegendItem
                basis="20%"
                className="c17"
                color="#039BE5"
                isFirstInRow={false}
                isInLastRow={true}
              >
                <item
                  basis="20%"
                  className="c17"
                >
                  <StyledComponent
                    basis="20%"
                    className="c17"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "item-pyuzpd-0",
                          "isStatic": false,
                          "lastClassName": "c5",
                          "rules": Array [
                            "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                          ],
                        },
                        "displayName": "item",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "item-pyuzpd-0",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c17 c18"
                    >
                      <flex
                        alignCenter={true}
                        full={true}
                      >
                        <StyledComponent
                          alignCenter={true}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "flex-x9ump0-0",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:flex-start;align-content:stretch;",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                ],
                              },
                              "displayName": "flex",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "flex-x9ump0-0",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          full={true}
                        >
                          <div
                            className="c3"
                          >
                            <Styled(Component)
                              color="#039BE5"
                              name="square"
                            >
                              <StyledComponent
                                color="#039BE5"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-bdVaJa",
                                      "isStatic": false,
                                      "lastClassName": "c16",
                                      "rules": Array [
                                        "
  color: ",
                                        [Function],
                                        ";
",
                                      ],
                                    },
                                    "displayName": "Styled(Component)",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-bdVaJa",
                                    "target": [Function],
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                name="square"
                              >
                                <Component
                                  className="c12"
                                  color="#039BE5"
                                  name="square"
                                >
                                  <Icon
                                    as="i"
                                    className="c12"
                                    name="square"
                                  >
                                    <i
                                      aria-hidden="true"
                                      className="square icon c12"
                                      onClick={[Function]}
                                    />
                                  </Icon>
                                </Component>
                              </StyledComponent>
                            </Styled(Component)>
                            <item
                              grow={1}
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "item-pyuzpd-0",
                                      "isStatic": false,
                                      "lastClassName": "c5",
                                      "rules": Array [
                                        "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                      ],
                                    },
                                    "displayName": "item",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "item-pyuzpd-0",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                grow={1}
                              >
                                <div
                                  className="c5"
                                >
                                  Sapien diam
                                </div>
                              </StyledComponent>
                            </item>
                          </div>
                        </StyledComponent>
                      </flex>
                    </div>
                  </StyledComponent>
                </item>
              </LegendItem>
            </StyledComponent>
          </Styled(LegendItem)>
          <Styled(LegendItem)
            basis="20%"
            color="#00ACC1"
            isFirstInRow={false}
            isInLastRow={true}
            key="Pellentesque amet"
          >
            <StyledComponent
              basis="20%"
              color="#00ACC1"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bwzfXH",
                    "isStatic": false,
                    "lastClassName": "c17",
                    "rules": Array [
                      "
  ",
                      "
    border-width: 0.07142857142857142rem;
    border-style: dashed;
    border-radius: 0rem;
    border-color: #D6D6D6;
  ",
                      "
  ",
                      [Function],
                      "
  ",
                      [Function],
                      "
  border-top: 0;
  border-right: 0;
  padding: ",
                      "1rem",
                      ";
",
                    ],
                  },
                  "displayName": "Styled(LegendItem)",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bwzfXH",
                  "target": [Function],
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              isFirstInRow={false}
              isInLastRow={true}
            >
              <LegendItem
                basis="20%"
                className="c17"
                color="#00ACC1"
                isFirstInRow={false}
                isInLastRow={true}
              >
                <item
                  basis="20%"
                  className="c17"
                >
                  <StyledComponent
                    basis="20%"
                    className="c17"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "item-pyuzpd-0",
                          "isStatic": false,
                          "lastClassName": "c5",
                          "rules": Array [
                            "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                          ],
                        },
                        "displayName": "item",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "item-pyuzpd-0",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c17 c18"
                    >
                      <flex
                        alignCenter={true}
                        full={true}
                      >
                        <StyledComponent
                          alignCenter={true}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "flex-x9ump0-0",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:flex-start;align-content:stretch;",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                ],
                              },
                              "displayName": "flex",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "flex-x9ump0-0",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          full={true}
                        >
                          <div
                            className="c3"
                          >
                            <Styled(Component)
                              color="#00ACC1"
                              name="square"
                            >
                              <StyledComponent
                                color="#00ACC1"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-bdVaJa",
                                      "isStatic": false,
                                      "lastClassName": "c16",
                                      "rules": Array [
                                        "
  color: ",
                                        [Function],
                                        ";
",
                                      ],
                                    },
                                    "displayName": "Styled(Component)",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-bdVaJa",
                                    "target": [Function],
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                name="square"
                              >
                                <Component
                                  className="c13"
                                  color="#00ACC1"
                                  name="square"
                                >
                                  <Icon
                                    as="i"
                                    className="c13"
                                    name="square"
                                  >
                                    <i
                                      aria-hidden="true"
                                      className="square icon c13"
                                      onClick={[Function]}
                                    />
                                  </Icon>
                                </Component>
                              </StyledComponent>
                            </Styled(Component)>
                            <item
                              grow={1}
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "item-pyuzpd-0",
                                      "isStatic": false,
                                      "lastClassName": "c5",
                                      "rules": Array [
                                        "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                      ],
                                    },
                                    "displayName": "item",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "item-pyuzpd-0",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                grow={1}
                              >
                                <div
                                  className="c5"
                                >
                                  Pellentesque amet
                                </div>
                              </StyledComponent>
                            </item>
                          </div>
                        </StyledComponent>
                      </flex>
                    </div>
                  </StyledComponent>
                </item>
              </LegendItem>
            </StyledComponent>
          </Styled(LegendItem)>
          <Styled(LegendItem)
            basis="20%"
            color="#43A047"
            isFirstInRow={false}
            isInLastRow={true}
            key="Diam dolor sapien"
          >
            <StyledComponent
              basis="20%"
              color="#43A047"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bwzfXH",
                    "isStatic": false,
                    "lastClassName": "c17",
                    "rules": Array [
                      "
  ",
                      "
    border-width: 0.07142857142857142rem;
    border-style: dashed;
    border-radius: 0rem;
    border-color: #D6D6D6;
  ",
                      "
  ",
                      [Function],
                      "
  ",
                      [Function],
                      "
  border-top: 0;
  border-right: 0;
  padding: ",
                      "1rem",
                      ";
",
                    ],
                  },
                  "displayName": "Styled(LegendItem)",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bwzfXH",
                  "target": [Function],
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              isFirstInRow={false}
              isInLastRow={true}
            >
              <LegendItem
                basis="20%"
                className="c17"
                color="#43A047"
                isFirstInRow={false}
                isInLastRow={true}
              >
                <item
                  basis="20%"
                  className="c17"
                >
                  <StyledComponent
                    basis="20%"
                    className="c17"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "item-pyuzpd-0",
                          "isStatic": false,
                          "lastClassName": "c5",
                          "rules": Array [
                            "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                          ],
                        },
                        "displayName": "item",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "item-pyuzpd-0",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c17 c18"
                    >
                      <flex
                        alignCenter={true}
                        full={true}
                      >
                        <StyledComponent
                          alignCenter={true}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "flex-x9ump0-0",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:flex-start;align-content:stretch;",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                ],
                              },
                              "displayName": "flex",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "flex-x9ump0-0",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          full={true}
                        >
                          <div
                            className="c3"
                          >
                            <Styled(Component)
                              color="#43A047"
                              name="square"
                            >
                              <StyledComponent
                                color="#43A047"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-bdVaJa",
                                      "isStatic": false,
                                      "lastClassName": "c16",
                                      "rules": Array [
                                        "
  color: ",
                                        [Function],
                                        ";
",
                                      ],
                                    },
                                    "displayName": "Styled(Component)",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-bdVaJa",
                                    "target": [Function],
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                name="square"
                              >
                                <Component
                                  className="c14"
                                  color="#43A047"
                                  name="square"
                                >
                                  <Icon
                                    as="i"
                                    className="c14"
                                    name="square"
                                  >
                                    <i
                                      aria-hidden="true"
                                      className="square icon c14"
                                      onClick={[Function]}
                                    />
                                  </Icon>
                                </Component>
                              </StyledComponent>
                            </Styled(Component)>
                            <item
                              grow={1}
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "item-pyuzpd-0",
                                      "isStatic": false,
                                      "lastClassName": "c5",
                                      "rules": Array [
                                        "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                      ],
                                    },
                                    "displayName": "item",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "item-pyuzpd-0",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                grow={1}
                              >
                                <div
                                  className="c5"
                                >
                                  Diam dolor sapien
                                </div>
                              </StyledComponent>
                            </item>
                          </div>
                        </StyledComponent>
                      </flex>
                    </div>
                  </StyledComponent>
                </item>
              </LegendItem>
            </StyledComponent>
          </Styled(LegendItem)>
          <Styled(LegendItem)
            basis="20%"
            color="#7CB342"
            isFirstInRow={false}
            isInLastRow={true}
            key="Vitae ulnam"
          >
            <StyledComponent
              basis="20%"
              color="#7CB342"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bwzfXH",
                    "isStatic": false,
                    "lastClassName": "c17",
                    "rules": Array [
                      "
  ",
                      "
    border-width: 0.07142857142857142rem;
    border-style: dashed;
    border-radius: 0rem;
    border-color: #D6D6D6;
  ",
                      "
  ",
                      [Function],
                      "
  ",
                      [Function],
                      "
  border-top: 0;
  border-right: 0;
  padding: ",
                      "1rem",
                      ";
",
                    ],
                  },
                  "displayName": "Styled(LegendItem)",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bwzfXH",
                  "target": [Function],
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              isFirstInRow={false}
              isInLastRow={true}
            >
              <LegendItem
                basis="20%"
                className="c17"
                color="#7CB342"
                isFirstInRow={false}
                isInLastRow={true}
              >
                <item
                  basis="20%"
                  className="c17"
                >
                  <StyledComponent
                    basis="20%"
                    className="c17"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "item-pyuzpd-0",
                          "isStatic": false,
                          "lastClassName": "c5",
                          "rules": Array [
                            "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                          ],
                        },
                        "displayName": "item",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "item-pyuzpd-0",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c17 c18"
                    >
                      <flex
                        alignCenter={true}
                        full={true}
                      >
                        <StyledComponent
                          alignCenter={true}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "flex-x9ump0-0",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:flex-start;align-content:stretch;",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                ],
                              },
                              "displayName": "flex",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "flex-x9ump0-0",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          full={true}
                        >
                          <div
                            className="c3"
                          >
                            <Styled(Component)
                              color="#7CB342"
                              name="square"
                            >
                              <StyledComponent
                                color="#7CB342"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-bdVaJa",
                                      "isStatic": false,
                                      "lastClassName": "c16",
                                      "rules": Array [
                                        "
  color: ",
                                        [Function],
                                        ";
",
                                      ],
                                    },
                                    "displayName": "Styled(Component)",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-bdVaJa",
                                    "target": [Function],
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                name="square"
                              >
                                <Component
                                  className="c16"
                                  color="#7CB342"
                                  name="square"
                                >
                                  <Icon
                                    as="i"
                                    className="c16"
                                    name="square"
                                  >
                                    <i
                                      aria-hidden="true"
                                      className="square icon c16"
                                      onClick={[Function]}
                                    />
                                  </Icon>
                                </Component>
                              </StyledComponent>
                            </Styled(Component)>
                            <item
                              grow={1}
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "item-pyuzpd-0",
                                      "isStatic": false,
                                      "lastClassName": "c5",
                                      "rules": Array [
                                        "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                      ],
                                    },
                                    "displayName": "item",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "item-pyuzpd-0",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                grow={1}
                              >
                                <div
                                  className="c5"
                                >
                                  Vitae ulnam
                                </div>
                              </StyledComponent>
                            </item>
                          </div>
                        </StyledComponent>
                      </flex>
                    </div>
                  </StyledComponent>
                </item>
              </LegendItem>
            </StyledComponent>
          </Styled(LegendItem)>
        </div>
      </StyledComponent>
    </flex>
  </GraphLegend>
</div>
`;

exports[`The graph legend renders the given column count 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-content: stretch;
  -ms-flex-line-pack: stretch;
  align-content: stretch;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  width: 100%;
  height: 100%;
  -webkit-flex-basis: 100%;
  -ms-flex-preferred-size: 100%;
  flex-basis: 100%;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-content: stretch;
  -ms-flex-line-pack: stretch;
  align-content: stretch;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 100%;
  height: 100%;
  -webkit-flex-basis: 100%;
  -ms-flex-preferred-size: 100%;
  flex-basis: 100%;
}

.c5 {
  -webkit-order: 0;
  -ms-flex-order: 0;
  order: 0;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 1;
  -ms-flex-negative: 1;
  flex-shrink: 1;
  display: block;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.c2 {
  -webkit-order: 0;
  -ms-flex-order: 0;
  order: 0;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 1;
  -ms-flex-negative: 1;
  flex-shrink: 1;
  display: block;
  -webkit-flex-basis: 20%;
  -ms-flex-preferred-size: 20%;
  flex-basis: 20%;
}

.c4 {
  color: #e53935;
}

.c7 {
  color: #D81B60;
}

.c8 {
  color: #8E24AA;
}

.c9 {
  color: #5E35B1;
}

.c10 {
  color: #3949AB;
}

.c12 {
  color: #1E88E5;
}

.c14 {
  color: #039BE5;
}

.c15 {
  color: #00ACC1;
}

.c16 {
  color: #43A047;
}

.c17 {
  color: #7CB342;
}

.c1 {
  border-width: 0.07142857142857142rem;
  border-style: dashed;
  border-radius: 0rem;
  border-color: #D6D6D6;
  border-left: 0;
  border-top: 0;
  border-right: 0;
  padding: 1rem;
}

.c6 {
  border-width: 0.07142857142857142rem;
  border-style: dashed;
  border-radius: 0rem;
  border-color: #D6D6D6;
  border-top: 0;
  border-right: 0;
  padding: 1rem;
}

.c11 {
  border-width: 0.07142857142857142rem;
  border-style: dashed;
  border-radius: 0rem;
  border-color: #D6D6D6;
  border-left: 0;
  border-bottom: 0;
  border-top: 0;
  border-right: 0;
  padding: 1rem;
}

.c13 {
  border-width: 0.07142857142857142rem;
  border-style: dashed;
  border-radius: 0rem;
  border-color: #D6D6D6;
  border-bottom: 0;
  border-top: 0;
  border-right: 0;
  padding: 1rem;
}

<GraphLegend
  columns={5}
  items={
    Immutable.List [
      Immutable.Map {
        "label": "Lorem ipsum dolor",
      },
      Immutable.Map {
        "label": "Diam sapien",
        "value": "$54,234",
      },
      Immutable.Map {
        "label": "Pellentesque",
      },
      Immutable.Map {
        "label": "Amet diam",
        "value": "Some",
      },
      Immutable.Map {
        "label": "Ulnam vitae",
      },
      Immutable.Map {
        "label": "Ipsum dolor",
      },
      Immutable.Map {
        "label": "Sapien diam",
      },
      Immutable.Map {
        "label": "Pellentesque amet",
      },
      Immutable.Map {
        "label": "Diam dolor sapien",
      },
      Immutable.Map {
        "label": "Vitae ulnam",
      },
    ]
  }
  palette={
    ColorPalette {
      "cache": Object {
        "068bd95f1f2605c97c69f8cadd5cc2e449269535": "#8E24AA",
        "08a0641b040fbf5ace67d6c29d035fc951dbe176": "#039BE5",
        "2e6fe8785ce797e8629cc8dc2ed5e79e72a96781": "#5E35B1",
        "55325ab577b56cc4596966d646892286acfa95e1": "#1E88E5",
        "5a701e07e01def1094f63fd9cdaa63ea6e45bf19": "#e53935",
        "6fb112f98c83b100eae6ff55e0378342f591c0b5": "#00ACC1",
        "a52c2792d30f345492735d42190c246939168a6b": "#D81B60",
        "cc17abe04657c084651640877dcc3b876a6f1756": "#43A047",
        "ce970448c761dd0ec0b0e734b6ab305c796a8268": "#3949AB",
        "e047b4e7fbf5820134d60ea7d0da2e25e0283310": "#7CB342",
      },
      "getRandomColor": [Function],
    }
  }
>
  <flex
    full={true}
    wrap="wrap"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "flex-x9ump0-0",
            "isStatic": false,
            "lastClassName": "c3",
            "rules": Array [
              "display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:flex-start;align-content:stretch;",
              [Function],
              ";",
              [Function],
              ";",
              [Function],
              ";",
              [Function],
              ";",
              [Function],
              ";",
              [Function],
              ";",
              [Function],
              ";",
              [Function],
              ";",
              [Function],
              ";",
              [Function],
              ";",
              [Function],
              ";",
              [Function],
              ";",
              [Function],
              ";",
              [Function],
              ";",
              [Function],
              ";",
              [Function],
              ";",
              [Function],
              ";",
              [Function],
              ";",
              [Function],
              ";",
              [Function],
              ";",
              [Function],
              ";",
              [Function],
              ";",
              [Function],
              ";",
              [Function],
              ";",
              [Function],
              ";",
              [Function],
              ";",
            ],
          },
          "displayName": "flex",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "flex-x9ump0-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      full={true}
      wrap="wrap"
    >
      <div
        className="c0"
        wrap="wrap"
      >
        <Styled(LegendItem)
          basis="20%"
          color="#e53935"
          isFirstInRow={true}
          isInLastRow={false}
          key="Lorem ipsum dolor"
        >
          <StyledComponent
            basis="20%"
            color="#e53935"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": false,
                  "lastClassName": "c13",
                  "rules": Array [
                    "
  ",
                    "
    border-width: 0.07142857142857142rem;
    border-style: dashed;
    border-radius: 0rem;
    border-color: #D6D6D6;
  ",
                    "
  ",
                    [Function],
                    "
  ",
                    [Function],
                    "
  border-top: 0;
  border-right: 0;
  padding: ",
                    "1rem",
                    ";
",
                  ],
                },
                "displayName": "Styled(LegendItem)",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            isFirstInRow={true}
            isInLastRow={false}
          >
            <LegendItem
              basis="20%"
              className="c1"
              color="#e53935"
              isFirstInRow={true}
              isInLastRow={false}
            >
              <item
                basis="20%"
                className="c1"
              >
                <StyledComponent
                  basis="20%"
                  className="c1"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "item-pyuzpd-0",
                        "isStatic": false,
                        "lastClassName": "c5",
                        "rules": Array [
                          "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                        ],
                      },
                      "displayName": "item",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "item-pyuzpd-0",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c1 c2"
                  >
                    <flex
                      alignCenter={true}
                      full={true}
                    >
                      <StyledComponent
                        alignCenter={true}
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "flex-x9ump0-0",
                              "isStatic": false,
                              "lastClassName": "c3",
                              "rules": Array [
                                "display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:flex-start;align-content:stretch;",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                              ],
                            },
                            "displayName": "flex",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "flex-x9ump0-0",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        full={true}
                      >
                        <div
                          className="c3"
                        >
                          <Styled(Component)
                            color="#e53935"
                            name="square"
                          >
                            <StyledComponent
                              color="#e53935"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-bdVaJa",
                                    "isStatic": false,
                                    "lastClassName": "c17",
                                    "rules": Array [
                                      "
  color: ",
                                      [Function],
                                      ";
",
                                    ],
                                  },
                                  "displayName": "Styled(Component)",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-bdVaJa",
                                  "target": [Function],
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              name="square"
                            >
                              <Component
                                className="c4"
                                color="#e53935"
                                name="square"
                              >
                                <Icon
                                  as="i"
                                  className="c4"
                                  name="square"
                                >
                                  <i
                                    aria-hidden="true"
                                    className="square icon c4"
                                    onClick={[Function]}
                                  />
                                </Icon>
                              </Component>
                            </StyledComponent>
                          </Styled(Component)>
                          <item
                            grow={1}
                          >
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "item-pyuzpd-0",
                                    "isStatic": false,
                                    "lastClassName": "c5",
                                    "rules": Array [
                                      "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                    ],
                                  },
                                  "displayName": "item",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "item-pyuzpd-0",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              grow={1}
                            >
                              <div
                                className="c5"
                              >
                                Lorem ipsum dolor
                              </div>
                            </StyledComponent>
                          </item>
                        </div>
                      </StyledComponent>
                    </flex>
                  </div>
                </StyledComponent>
              </item>
            </LegendItem>
          </StyledComponent>
        </Styled(LegendItem)>
        <Styled(LegendItem)
          basis="20%"
          color="#D81B60"
          isFirstInRow={false}
          isInLastRow={false}
          key="Diam sapien"
          value="$54,234"
        >
          <StyledComponent
            basis="20%"
            color="#D81B60"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": false,
                  "lastClassName": "c13",
                  "rules": Array [
                    "
  ",
                    "
    border-width: 0.07142857142857142rem;
    border-style: dashed;
    border-radius: 0rem;
    border-color: #D6D6D6;
  ",
                    "
  ",
                    [Function],
                    "
  ",
                    [Function],
                    "
  border-top: 0;
  border-right: 0;
  padding: ",
                    "1rem",
                    ";
",
                  ],
                },
                "displayName": "Styled(LegendItem)",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            isFirstInRow={false}
            isInLastRow={false}
            value="$54,234"
          >
            <LegendItem
              basis="20%"
              className="c6"
              color="#D81B60"
              isFirstInRow={false}
              isInLastRow={false}
              value="$54,234"
            >
              <item
                basis="20%"
                className="c6"
              >
                <StyledComponent
                  basis="20%"
                  className="c6"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "item-pyuzpd-0",
                        "isStatic": false,
                        "lastClassName": "c5",
                        "rules": Array [
                          "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                        ],
                      },
                      "displayName": "item",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "item-pyuzpd-0",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c6 c2"
                  >
                    <flex
                      alignCenter={true}
                      full={true}
                    >
                      <StyledComponent
                        alignCenter={true}
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "flex-x9ump0-0",
                              "isStatic": false,
                              "lastClassName": "c3",
                              "rules": Array [
                                "display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:flex-start;align-content:stretch;",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                              ],
                            },
                            "displayName": "flex",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "flex-x9ump0-0",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        full={true}
                      >
                        <div
                          className="c3"
                        >
                          <Styled(Component)
                            color="#D81B60"
                            name="square"
                          >
                            <StyledComponent
                              color="#D81B60"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-bdVaJa",
                                    "isStatic": false,
                                    "lastClassName": "c17",
                                    "rules": Array [
                                      "
  color: ",
                                      [Function],
                                      ";
",
                                    ],
                                  },
                                  "displayName": "Styled(Component)",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-bdVaJa",
                                  "target": [Function],
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              name="square"
                            >
                              <Component
                                className="c7"
                                color="#D81B60"
                                name="square"
                              >
                                <Icon
                                  as="i"
                                  className="c7"
                                  name="square"
                                >
                                  <i
                                    aria-hidden="true"
                                    className="square icon c7"
                                    onClick={[Function]}
                                  />
                                </Icon>
                              </Component>
                            </StyledComponent>
                          </Styled(Component)>
                          <item
                            grow={1}
                          >
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "item-pyuzpd-0",
                                    "isStatic": false,
                                    "lastClassName": "c5",
                                    "rules": Array [
                                      "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                    ],
                                  },
                                  "displayName": "item",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "item-pyuzpd-0",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              grow={1}
                            >
                              <div
                                className="c5"
                              >
                                Diam sapien
                              </div>
                            </StyledComponent>
                          </item>
                          <span>
                            $54,234
                          </span>
                        </div>
                      </StyledComponent>
                    </flex>
                  </div>
                </StyledComponent>
              </item>
            </LegendItem>
          </StyledComponent>
        </Styled(LegendItem)>
        <Styled(LegendItem)
          basis="20%"
          color="#8E24AA"
          isFirstInRow={false}
          isInLastRow={false}
          key="Pellentesque"
        >
          <StyledComponent
            basis="20%"
            color="#8E24AA"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": false,
                  "lastClassName": "c13",
                  "rules": Array [
                    "
  ",
                    "
    border-width: 0.07142857142857142rem;
    border-style: dashed;
    border-radius: 0rem;
    border-color: #D6D6D6;
  ",
                    "
  ",
                    [Function],
                    "
  ",
                    [Function],
                    "
  border-top: 0;
  border-right: 0;
  padding: ",
                    "1rem",
                    ";
",
                  ],
                },
                "displayName": "Styled(LegendItem)",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            isFirstInRow={false}
            isInLastRow={false}
          >
            <LegendItem
              basis="20%"
              className="c6"
              color="#8E24AA"
              isFirstInRow={false}
              isInLastRow={false}
            >
              <item
                basis="20%"
                className="c6"
              >
                <StyledComponent
                  basis="20%"
                  className="c6"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "item-pyuzpd-0",
                        "isStatic": false,
                        "lastClassName": "c5",
                        "rules": Array [
                          "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                        ],
                      },
                      "displayName": "item",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "item-pyuzpd-0",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c6 c2"
                  >
                    <flex
                      alignCenter={true}
                      full={true}
                    >
                      <StyledComponent
                        alignCenter={true}
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "flex-x9ump0-0",
                              "isStatic": false,
                              "lastClassName": "c3",
                              "rules": Array [
                                "display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:flex-start;align-content:stretch;",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                              ],
                            },
                            "displayName": "flex",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "flex-x9ump0-0",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        full={true}
                      >
                        <div
                          className="c3"
                        >
                          <Styled(Component)
                            color="#8E24AA"
                            name="square"
                          >
                            <StyledComponent
                              color="#8E24AA"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-bdVaJa",
                                    "isStatic": false,
                                    "lastClassName": "c17",
                                    "rules": Array [
                                      "
  color: ",
                                      [Function],
                                      ";
",
                                    ],
                                  },
                                  "displayName": "Styled(Component)",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-bdVaJa",
                                  "target": [Function],
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              name="square"
                            >
                              <Component
                                className="c8"
                                color="#8E24AA"
                                name="square"
                              >
                                <Icon
                                  as="i"
                                  className="c8"
                                  name="square"
                                >
                                  <i
                                    aria-hidden="true"
                                    className="square icon c8"
                                    onClick={[Function]}
                                  />
                                </Icon>
                              </Component>
                            </StyledComponent>
                          </Styled(Component)>
                          <item
                            grow={1}
                          >
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "item-pyuzpd-0",
                                    "isStatic": false,
                                    "lastClassName": "c5",
                                    "rules": Array [
                                      "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                    ],
                                  },
                                  "displayName": "item",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "item-pyuzpd-0",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              grow={1}
                            >
                              <div
                                className="c5"
                              >
                                Pellentesque
                              </div>
                            </StyledComponent>
                          </item>
                        </div>
                      </StyledComponent>
                    </flex>
                  </div>
                </StyledComponent>
              </item>
            </LegendItem>
          </StyledComponent>
        </Styled(LegendItem)>
        <Styled(LegendItem)
          basis="20%"
          color="#5E35B1"
          isFirstInRow={false}
          isInLastRow={false}
          key="Amet diam"
          value="Some"
        >
          <StyledComponent
            basis="20%"
            color="#5E35B1"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": false,
                  "lastClassName": "c13",
                  "rules": Array [
                    "
  ",
                    "
    border-width: 0.07142857142857142rem;
    border-style: dashed;
    border-radius: 0rem;
    border-color: #D6D6D6;
  ",
                    "
  ",
                    [Function],
                    "
  ",
                    [Function],
                    "
  border-top: 0;
  border-right: 0;
  padding: ",
                    "1rem",
                    ";
",
                  ],
                },
                "displayName": "Styled(LegendItem)",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            isFirstInRow={false}
            isInLastRow={false}
            value="Some"
          >
            <LegendItem
              basis="20%"
              className="c6"
              color="#5E35B1"
              isFirstInRow={false}
              isInLastRow={false}
              value="Some"
            >
              <item
                basis="20%"
                className="c6"
              >
                <StyledComponent
                  basis="20%"
                  className="c6"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "item-pyuzpd-0",
                        "isStatic": false,
                        "lastClassName": "c5",
                        "rules": Array [
                          "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                        ],
                      },
                      "displayName": "item",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "item-pyuzpd-0",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c6 c2"
                  >
                    <flex
                      alignCenter={true}
                      full={true}
                    >
                      <StyledComponent
                        alignCenter={true}
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "flex-x9ump0-0",
                              "isStatic": false,
                              "lastClassName": "c3",
                              "rules": Array [
                                "display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:flex-start;align-content:stretch;",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                              ],
                            },
                            "displayName": "flex",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "flex-x9ump0-0",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        full={true}
                      >
                        <div
                          className="c3"
                        >
                          <Styled(Component)
                            color="#5E35B1"
                            name="square"
                          >
                            <StyledComponent
                              color="#5E35B1"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-bdVaJa",
                                    "isStatic": false,
                                    "lastClassName": "c17",
                                    "rules": Array [
                                      "
  color: ",
                                      [Function],
                                      ";
",
                                    ],
                                  },
                                  "displayName": "Styled(Component)",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-bdVaJa",
                                  "target": [Function],
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              name="square"
                            >
                              <Component
                                className="c9"
                                color="#5E35B1"
                                name="square"
                              >
                                <Icon
                                  as="i"
                                  className="c9"
                                  name="square"
                                >
                                  <i
                                    aria-hidden="true"
                                    className="square icon c9"
                                    onClick={[Function]}
                                  />
                                </Icon>
                              </Component>
                            </StyledComponent>
                          </Styled(Component)>
                          <item
                            grow={1}
                          >
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "item-pyuzpd-0",
                                    "isStatic": false,
                                    "lastClassName": "c5",
                                    "rules": Array [
                                      "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                    ],
                                  },
                                  "displayName": "item",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "item-pyuzpd-0",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              grow={1}
                            >
                              <div
                                className="c5"
                              >
                                Amet diam
                              </div>
                            </StyledComponent>
                          </item>
                          <span>
                            Some
                          </span>
                        </div>
                      </StyledComponent>
                    </flex>
                  </div>
                </StyledComponent>
              </item>
            </LegendItem>
          </StyledComponent>
        </Styled(LegendItem)>
        <Styled(LegendItem)
          basis="20%"
          color="#3949AB"
          isFirstInRow={false}
          isInLastRow={false}
          key="Ulnam vitae"
        >
          <StyledComponent
            basis="20%"
            color="#3949AB"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": false,
                  "lastClassName": "c13",
                  "rules": Array [
                    "
  ",
                    "
    border-width: 0.07142857142857142rem;
    border-style: dashed;
    border-radius: 0rem;
    border-color: #D6D6D6;
  ",
                    "
  ",
                    [Function],
                    "
  ",
                    [Function],
                    "
  border-top: 0;
  border-right: 0;
  padding: ",
                    "1rem",
                    ";
",
                  ],
                },
                "displayName": "Styled(LegendItem)",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            isFirstInRow={false}
            isInLastRow={false}
          >
            <LegendItem
              basis="20%"
              className="c6"
              color="#3949AB"
              isFirstInRow={false}
              isInLastRow={false}
            >
              <item
                basis="20%"
                className="c6"
              >
                <StyledComponent
                  basis="20%"
                  className="c6"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "item-pyuzpd-0",
                        "isStatic": false,
                        "lastClassName": "c5",
                        "rules": Array [
                          "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                        ],
                      },
                      "displayName": "item",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "item-pyuzpd-0",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c6 c2"
                  >
                    <flex
                      alignCenter={true}
                      full={true}
                    >
                      <StyledComponent
                        alignCenter={true}
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "flex-x9ump0-0",
                              "isStatic": false,
                              "lastClassName": "c3",
                              "rules": Array [
                                "display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:flex-start;align-content:stretch;",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                              ],
                            },
                            "displayName": "flex",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "flex-x9ump0-0",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        full={true}
                      >
                        <div
                          className="c3"
                        >
                          <Styled(Component)
                            color="#3949AB"
                            name="square"
                          >
                            <StyledComponent
                              color="#3949AB"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-bdVaJa",
                                    "isStatic": false,
                                    "lastClassName": "c17",
                                    "rules": Array [
                                      "
  color: ",
                                      [Function],
                                      ";
",
                                    ],
                                  },
                                  "displayName": "Styled(Component)",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-bdVaJa",
                                  "target": [Function],
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              name="square"
                            >
                              <Component
                                className="c10"
                                color="#3949AB"
                                name="square"
                              >
                                <Icon
                                  as="i"
                                  className="c10"
                                  name="square"
                                >
                                  <i
                                    aria-hidden="true"
                                    className="square icon c10"
                                    onClick={[Function]}
                                  />
                                </Icon>
                              </Component>
                            </StyledComponent>
                          </Styled(Component)>
                          <item
                            grow={1}
                          >
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "item-pyuzpd-0",
                                    "isStatic": false,
                                    "lastClassName": "c5",
                                    "rules": Array [
                                      "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                    ],
                                  },
                                  "displayName": "item",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "item-pyuzpd-0",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              grow={1}
                            >
                              <div
                                className="c5"
                              >
                                Ulnam vitae
                              </div>
                            </StyledComponent>
                          </item>
                        </div>
                      </StyledComponent>
                    </flex>
                  </div>
                </StyledComponent>
              </item>
            </LegendItem>
          </StyledComponent>
        </Styled(LegendItem)>
        <Styled(LegendItem)
          basis="20%"
          color="#1E88E5"
          isFirstInRow={true}
          isInLastRow={true}
          key="Ipsum dolor"
        >
          <StyledComponent
            basis="20%"
            color="#1E88E5"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": false,
                  "lastClassName": "c13",
                  "rules": Array [
                    "
  ",
                    "
    border-width: 0.07142857142857142rem;
    border-style: dashed;
    border-radius: 0rem;
    border-color: #D6D6D6;
  ",
                    "
  ",
                    [Function],
                    "
  ",
                    [Function],
                    "
  border-top: 0;
  border-right: 0;
  padding: ",
                    "1rem",
                    ";
",
                  ],
                },
                "displayName": "Styled(LegendItem)",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            isFirstInRow={true}
            isInLastRow={true}
          >
            <LegendItem
              basis="20%"
              className="c11"
              color="#1E88E5"
              isFirstInRow={true}
              isInLastRow={true}
            >
              <item
                basis="20%"
                className="c11"
              >
                <StyledComponent
                  basis="20%"
                  className="c11"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "item-pyuzpd-0",
                        "isStatic": false,
                        "lastClassName": "c5",
                        "rules": Array [
                          "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                        ],
                      },
                      "displayName": "item",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "item-pyuzpd-0",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c11 c2"
                  >
                    <flex
                      alignCenter={true}
                      full={true}
                    >
                      <StyledComponent
                        alignCenter={true}
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "flex-x9ump0-0",
                              "isStatic": false,
                              "lastClassName": "c3",
                              "rules": Array [
                                "display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:flex-start;align-content:stretch;",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                              ],
                            },
                            "displayName": "flex",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "flex-x9ump0-0",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        full={true}
                      >
                        <div
                          className="c3"
                        >
                          <Styled(Component)
                            color="#1E88E5"
                            name="square"
                          >
                            <StyledComponent
                              color="#1E88E5"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-bdVaJa",
                                    "isStatic": false,
                                    "lastClassName": "c17",
                                    "rules": Array [
                                      "
  color: ",
                                      [Function],
                                      ";
",
                                    ],
                                  },
                                  "displayName": "Styled(Component)",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-bdVaJa",
                                  "target": [Function],
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              name="square"
                            >
                              <Component
                                className="c12"
                                color="#1E88E5"
                                name="square"
                              >
                                <Icon
                                  as="i"
                                  className="c12"
                                  name="square"
                                >
                                  <i
                                    aria-hidden="true"
                                    className="square icon c12"
                                    onClick={[Function]}
                                  />
                                </Icon>
                              </Component>
                            </StyledComponent>
                          </Styled(Component)>
                          <item
                            grow={1}
                          >
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "item-pyuzpd-0",
                                    "isStatic": false,
                                    "lastClassName": "c5",
                                    "rules": Array [
                                      "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                    ],
                                  },
                                  "displayName": "item",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "item-pyuzpd-0",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              grow={1}
                            >
                              <div
                                className="c5"
                              >
                                Ipsum dolor
                              </div>
                            </StyledComponent>
                          </item>
                        </div>
                      </StyledComponent>
                    </flex>
                  </div>
                </StyledComponent>
              </item>
            </LegendItem>
          </StyledComponent>
        </Styled(LegendItem)>
        <Styled(LegendItem)
          basis="20%"
          color="#039BE5"
          isFirstInRow={false}
          isInLastRow={true}
          key="Sapien diam"
        >
          <StyledComponent
            basis="20%"
            color="#039BE5"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": false,
                  "lastClassName": "c13",
                  "rules": Array [
                    "
  ",
                    "
    border-width: 0.07142857142857142rem;
    border-style: dashed;
    border-radius: 0rem;
    border-color: #D6D6D6;
  ",
                    "
  ",
                    [Function],
                    "
  ",
                    [Function],
                    "
  border-top: 0;
  border-right: 0;
  padding: ",
                    "1rem",
                    ";
",
                  ],
                },
                "displayName": "Styled(LegendItem)",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            isFirstInRow={false}
            isInLastRow={true}
          >
            <LegendItem
              basis="20%"
              className="c13"
              color="#039BE5"
              isFirstInRow={false}
              isInLastRow={true}
            >
              <item
                basis="20%"
                className="c13"
              >
                <StyledComponent
                  basis="20%"
                  className="c13"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "item-pyuzpd-0",
                        "isStatic": false,
                        "lastClassName": "c5",
                        "rules": Array [
                          "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                        ],
                      },
                      "displayName": "item",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "item-pyuzpd-0",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c13 c2"
                  >
                    <flex
                      alignCenter={true}
                      full={true}
                    >
                      <StyledComponent
                        alignCenter={true}
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "flex-x9ump0-0",
                              "isStatic": false,
                              "lastClassName": "c3",
                              "rules": Array [
                                "display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:flex-start;align-content:stretch;",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                              ],
                            },
                            "displayName": "flex",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "flex-x9ump0-0",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        full={true}
                      >
                        <div
                          className="c3"
                        >
                          <Styled(Component)
                            color="#039BE5"
                            name="square"
                          >
                            <StyledComponent
                              color="#039BE5"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-bdVaJa",
                                    "isStatic": false,
                                    "lastClassName": "c17",
                                    "rules": Array [
                                      "
  color: ",
                                      [Function],
                                      ";
",
                                    ],
                                  },
                                  "displayName": "Styled(Component)",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-bdVaJa",
                                  "target": [Function],
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              name="square"
                            >
                              <Component
                                className="c14"
                                color="#039BE5"
                                name="square"
                              >
                                <Icon
                                  as="i"
                                  className="c14"
                                  name="square"
                                >
                                  <i
                                    aria-hidden="true"
                                    className="square icon c14"
                                    onClick={[Function]}
                                  />
                                </Icon>
                              </Component>
                            </StyledComponent>
                          </Styled(Component)>
                          <item
                            grow={1}
                          >
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "item-pyuzpd-0",
                                    "isStatic": false,
                                    "lastClassName": "c5",
                                    "rules": Array [
                                      "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                    ],
                                  },
                                  "displayName": "item",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "item-pyuzpd-0",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              grow={1}
                            >
                              <div
                                className="c5"
                              >
                                Sapien diam
                              </div>
                            </StyledComponent>
                          </item>
                        </div>
                      </StyledComponent>
                    </flex>
                  </div>
                </StyledComponent>
              </item>
            </LegendItem>
          </StyledComponent>
        </Styled(LegendItem)>
        <Styled(LegendItem)
          basis="20%"
          color="#00ACC1"
          isFirstInRow={false}
          isInLastRow={true}
          key="Pellentesque amet"
        >
          <StyledComponent
            basis="20%"
            color="#00ACC1"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": false,
                  "lastClassName": "c13",
                  "rules": Array [
                    "
  ",
                    "
    border-width: 0.07142857142857142rem;
    border-style: dashed;
    border-radius: 0rem;
    border-color: #D6D6D6;
  ",
                    "
  ",
                    [Function],
                    "
  ",
                    [Function],
                    "
  border-top: 0;
  border-right: 0;
  padding: ",
                    "1rem",
                    ";
",
                  ],
                },
                "displayName": "Styled(LegendItem)",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            isFirstInRow={false}
            isInLastRow={true}
          >
            <LegendItem
              basis="20%"
              className="c13"
              color="#00ACC1"
              isFirstInRow={false}
              isInLastRow={true}
            >
              <item
                basis="20%"
                className="c13"
              >
                <StyledComponent
                  basis="20%"
                  className="c13"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "item-pyuzpd-0",
                        "isStatic": false,
                        "lastClassName": "c5",
                        "rules": Array [
                          "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                        ],
                      },
                      "displayName": "item",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "item-pyuzpd-0",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c13 c2"
                  >
                    <flex
                      alignCenter={true}
                      full={true}
                    >
                      <StyledComponent
                        alignCenter={true}
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "flex-x9ump0-0",
                              "isStatic": false,
                              "lastClassName": "c3",
                              "rules": Array [
                                "display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:flex-start;align-content:stretch;",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                              ],
                            },
                            "displayName": "flex",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "flex-x9ump0-0",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        full={true}
                      >
                        <div
                          className="c3"
                        >
                          <Styled(Component)
                            color="#00ACC1"
                            name="square"
                          >
                            <StyledComponent
                              color="#00ACC1"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-bdVaJa",
                                    "isStatic": false,
                                    "lastClassName": "c17",
                                    "rules": Array [
                                      "
  color: ",
                                      [Function],
                                      ";
",
                                    ],
                                  },
                                  "displayName": "Styled(Component)",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-bdVaJa",
                                  "target": [Function],
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              name="square"
                            >
                              <Component
                                className="c15"
                                color="#00ACC1"
                                name="square"
                              >
                                <Icon
                                  as="i"
                                  className="c15"
                                  name="square"
                                >
                                  <i
                                    aria-hidden="true"
                                    className="square icon c15"
                                    onClick={[Function]}
                                  />
                                </Icon>
                              </Component>
                            </StyledComponent>
                          </Styled(Component)>
                          <item
                            grow={1}
                          >
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "item-pyuzpd-0",
                                    "isStatic": false,
                                    "lastClassName": "c5",
                                    "rules": Array [
                                      "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                    ],
                                  },
                                  "displayName": "item",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "item-pyuzpd-0",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              grow={1}
                            >
                              <div
                                className="c5"
                              >
                                Pellentesque amet
                              </div>
                            </StyledComponent>
                          </item>
                        </div>
                      </StyledComponent>
                    </flex>
                  </div>
                </StyledComponent>
              </item>
            </LegendItem>
          </StyledComponent>
        </Styled(LegendItem)>
        <Styled(LegendItem)
          basis="20%"
          color="#43A047"
          isFirstInRow={false}
          isInLastRow={true}
          key="Diam dolor sapien"
        >
          <StyledComponent
            basis="20%"
            color="#43A047"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": false,
                  "lastClassName": "c13",
                  "rules": Array [
                    "
  ",
                    "
    border-width: 0.07142857142857142rem;
    border-style: dashed;
    border-radius: 0rem;
    border-color: #D6D6D6;
  ",
                    "
  ",
                    [Function],
                    "
  ",
                    [Function],
                    "
  border-top: 0;
  border-right: 0;
  padding: ",
                    "1rem",
                    ";
",
                  ],
                },
                "displayName": "Styled(LegendItem)",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            isFirstInRow={false}
            isInLastRow={true}
          >
            <LegendItem
              basis="20%"
              className="c13"
              color="#43A047"
              isFirstInRow={false}
              isInLastRow={true}
            >
              <item
                basis="20%"
                className="c13"
              >
                <StyledComponent
                  basis="20%"
                  className="c13"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "item-pyuzpd-0",
                        "isStatic": false,
                        "lastClassName": "c5",
                        "rules": Array [
                          "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                        ],
                      },
                      "displayName": "item",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "item-pyuzpd-0",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c13 c2"
                  >
                    <flex
                      alignCenter={true}
                      full={true}
                    >
                      <StyledComponent
                        alignCenter={true}
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "flex-x9ump0-0",
                              "isStatic": false,
                              "lastClassName": "c3",
                              "rules": Array [
                                "display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:flex-start;align-content:stretch;",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                              ],
                            },
                            "displayName": "flex",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "flex-x9ump0-0",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        full={true}
                      >
                        <div
                          className="c3"
                        >
                          <Styled(Component)
                            color="#43A047"
                            name="square"
                          >
                            <StyledComponent
                              color="#43A047"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-bdVaJa",
                                    "isStatic": false,
                                    "lastClassName": "c17",
                                    "rules": Array [
                                      "
  color: ",
                                      [Function],
                                      ";
",
                                    ],
                                  },
                                  "displayName": "Styled(Component)",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-bdVaJa",
                                  "target": [Function],
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              name="square"
                            >
                              <Component
                                className="c16"
                                color="#43A047"
                                name="square"
                              >
                                <Icon
                                  as="i"
                                  className="c16"
                                  name="square"
                                >
                                  <i
                                    aria-hidden="true"
                                    className="square icon c16"
                                    onClick={[Function]}
                                  />
                                </Icon>
                              </Component>
                            </StyledComponent>
                          </Styled(Component)>
                          <item
                            grow={1}
                          >
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "item-pyuzpd-0",
                                    "isStatic": false,
                                    "lastClassName": "c5",
                                    "rules": Array [
                                      "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                    ],
                                  },
                                  "displayName": "item",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "item-pyuzpd-0",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              grow={1}
                            >
                              <div
                                className="c5"
                              >
                                Diam dolor sapien
                              </div>
                            </StyledComponent>
                          </item>
                        </div>
                      </StyledComponent>
                    </flex>
                  </div>
                </StyledComponent>
              </item>
            </LegendItem>
          </StyledComponent>
        </Styled(LegendItem)>
        <Styled(LegendItem)
          basis="20%"
          color="#7CB342"
          isFirstInRow={false}
          isInLastRow={true}
          key="Vitae ulnam"
        >
          <StyledComponent
            basis="20%"
            color="#7CB342"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": false,
                  "lastClassName": "c13",
                  "rules": Array [
                    "
  ",
                    "
    border-width: 0.07142857142857142rem;
    border-style: dashed;
    border-radius: 0rem;
    border-color: #D6D6D6;
  ",
                    "
  ",
                    [Function],
                    "
  ",
                    [Function],
                    "
  border-top: 0;
  border-right: 0;
  padding: ",
                    "1rem",
                    ";
",
                  ],
                },
                "displayName": "Styled(LegendItem)",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            isFirstInRow={false}
            isInLastRow={true}
          >
            <LegendItem
              basis="20%"
              className="c13"
              color="#7CB342"
              isFirstInRow={false}
              isInLastRow={true}
            >
              <item
                basis="20%"
                className="c13"
              >
                <StyledComponent
                  basis="20%"
                  className="c13"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "item-pyuzpd-0",
                        "isStatic": false,
                        "lastClassName": "c5",
                        "rules": Array [
                          "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                          [Function],
                          ";",
                        ],
                      },
                      "displayName": "item",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "item-pyuzpd-0",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c13 c2"
                  >
                    <flex
                      alignCenter={true}
                      full={true}
                    >
                      <StyledComponent
                        alignCenter={true}
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "flex-x9ump0-0",
                              "isStatic": false,
                              "lastClassName": "c3",
                              "rules": Array [
                                "display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:flex-start;align-content:stretch;",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                                [Function],
                                ";",
                              ],
                            },
                            "displayName": "flex",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "flex-x9ump0-0",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        full={true}
                      >
                        <div
                          className="c3"
                        >
                          <Styled(Component)
                            color="#7CB342"
                            name="square"
                          >
                            <StyledComponent
                              color="#7CB342"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-bdVaJa",
                                    "isStatic": false,
                                    "lastClassName": "c17",
                                    "rules": Array [
                                      "
  color: ",
                                      [Function],
                                      ";
",
                                    ],
                                  },
                                  "displayName": "Styled(Component)",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-bdVaJa",
                                  "target": [Function],
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              name="square"
                            >
                              <Component
                                className="c17"
                                color="#7CB342"
                                name="square"
                              >
                                <Icon
                                  as="i"
                                  className="c17"
                                  name="square"
                                >
                                  <i
                                    aria-hidden="true"
                                    className="square icon c17"
                                    onClick={[Function]}
                                  />
                                </Icon>
                              </Component>
                            </StyledComponent>
                          </Styled(Component)>
                          <item
                            grow={1}
                          >
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "item-pyuzpd-0",
                                    "isStatic": false,
                                    "lastClassName": "c5",
                                    "rules": Array [
                                      "order:0;flex-basis:auto;flex-grow:0;flex-shrink:1;display:block;",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                    ],
                                  },
                                  "displayName": "item",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "item-pyuzpd-0",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              grow={1}
                            >
                              <div
                                className="c5"
                              >
                                Vitae ulnam
                              </div>
                            </StyledComponent>
                          </item>
                        </div>
                      </StyledComponent>
                    </flex>
                  </div>
                </StyledComponent>
              </item>
            </LegendItem>
          </StyledComponent>
        </Styled(LegendItem)>
      </div>
    </StyledComponent>
  </flex>
</GraphLegend>
`;
